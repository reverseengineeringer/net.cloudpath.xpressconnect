package org.bouncycastle2.crypto.engines;

import org.bouncycastle2.crypto.BlockCipher;
import org.bouncycastle2.crypto.CipherParameters;
import org.bouncycastle2.crypto.DataLengthException;
import org.bouncycastle2.crypto.params.KeyParameter;

public class CamelliaEngine
  implements BlockCipher
{
  private static final int BLOCK_SIZE = 16;
  private static final int MASK8 = 255;
  private static final int[] SBOX1_1110;
  private static final int[] SBOX2_0222;
  private static final int[] SBOX3_3033 = arrayOfInt4;
  private static final int[] SBOX4_4404;
  private static final int[] SIGMA = { -1600231809, 1003262091, -1233459112, 1286239154, -957401297, -380665154, 1426019237, -237801700, 283453434, -563598051, -1336506174, -1276722691 };
  private boolean _keyIs128;
  private boolean initialised = false;
  private int[] ke = new int[12];
  private int[] kw = new int[8];
  private int[] state = new int[4];
  private int[] subkey = new int[96];

  static
  {
    int[] arrayOfInt1 = new int[256];
    arrayOfInt1[0] = 1886416896;
    arrayOfInt1[1] = -2105376256;
    arrayOfInt1[2] = 741092352;
    arrayOfInt1[3] = -320017408;
    arrayOfInt1[4] = -1280068864;
    arrayOfInt1[5] = 656877312;
    arrayOfInt1[6] = -1061109760;
    arrayOfInt1[7] = -437918464;
    arrayOfInt1[8] = -454761472;
    arrayOfInt1[9] = -2054847232;
    arrayOfInt1[10] = 1465341696;
    arrayOfInt1[11] = 892679424;
    arrayOfInt1[12] = -353703424;
    arrayOfInt1[13] = 202116096;
    arrayOfInt1[14] = -1364283904;
    arrayOfInt1[15] = 1094795520;
    arrayOfInt1[16] = 589505280;
    arrayOfInt1[17] = -269488384;
    arrayOfInt1[18] = 1802201856;
    arrayOfInt1[19] = -1819045120;
    arrayOfInt1[20] = 1162167552;
    arrayOfInt1[21] = 421075200;
    arrayOfInt1[22] = -1515870976;
    arrayOfInt1[23] = 555819264;
    arrayOfInt1[24] = -303174400;
    arrayOfInt1[25] = 235802112;
    arrayOfInt1[26] = 1330597632;
    arrayOfInt1[27] = 1313754624;
    arrayOfInt1[28] = 488447232;
    arrayOfInt1[29] = 1701143808;
    arrayOfInt1[30] = -1835888128;
    arrayOfInt1[31] = -1111638784;
    arrayOfInt1[32] = -2038004224;
    arrayOfInt1[33] = -1195853824;
    arrayOfInt1[34] = -1347440896;
    arrayOfInt1[35] = -1886417152;
    arrayOfInt1[36] = 2088532992;
    arrayOfInt1[37] = -336860416;
    arrayOfInt1[38] = 522133248;
    arrayOfInt1[39] = -825307648;
    arrayOfInt1[40] = 1044266496;
    arrayOfInt1[41] = 808464384;
    arrayOfInt1[42] = -589505536;
    arrayOfInt1[43] = 1600085760;
    arrayOfInt1[44] = 1583242752;
    arrayOfInt1[45] = -976894720;
    arrayOfInt1[46] = 185273088;
    arrayOfInt1[47] = 437918208;
    arrayOfInt1[48] = -1499027968;
    arrayOfInt1[49] = -505290496;
    arrayOfInt1[50] = 960051456;
    arrayOfInt1[51] = -892679680;
    arrayOfInt1[52] = -707406592;
    arrayOfInt1[53] = 1195853568;
    arrayOfInt1[54] = 1566399744;
    arrayOfInt1[55] = 1027423488;
    arrayOfInt1[56] = -640034560;
    arrayOfInt1[57] = 16843008;
    arrayOfInt1[58] = 1515870720;
    arrayOfInt1[59] = -690563584;
    arrayOfInt1[60] = 1364283648;
    arrayOfInt1[61] = 1448498688;
    arrayOfInt1[62] = 1819044864;
    arrayOfInt1[63] = 1296911616;
    arrayOfInt1[64] = -1953789184;
    arrayOfInt1[65] = 218959104;
    arrayOfInt1[66] = -1701144064;
    arrayOfInt1[67] = 1717986816;
    arrayOfInt1[68] = -67372288;
    arrayOfInt1[69] = -858993664;
    arrayOfInt1[70] = -1330597888;
    arrayOfInt1[71] = 757935360;
    arrayOfInt1[72] = 1953788928;
    arrayOfInt1[73] = 303174144;
    arrayOfInt1[74] = 724249344;
    arrayOfInt1[75] = 538976256;
    arrayOfInt1[76] = -252645376;
    arrayOfInt1[77] = -1313754880;
    arrayOfInt1[78] = -2071690240;
    arrayOfInt1[79] = -1717987072;
    arrayOfInt1[80] = -538976512;
    arrayOfInt1[81] = 1280068608;
    arrayOfInt1[82] = -875836672;
    arrayOfInt1[83] = -1027423744;
    arrayOfInt1[84] = 875836416;
    arrayOfInt1[85] = 2122219008;
    arrayOfInt1[86] = 1987474944;
    arrayOfInt1[87] = 84215040;
    arrayOfInt1[88] = 1835887872;
    arrayOfInt1[89] = -1212696832;
    arrayOfInt1[90] = -1448498944;
    arrayOfInt1[91] = 825307392;
    arrayOfInt1[92] = -774778624;
    arrayOfInt1[93] = 387389184;
    arrayOfInt1[94] = 67372032;
    arrayOfInt1[95] = -673720576;
    arrayOfInt1[96] = 336860160;
    arrayOfInt1[97] = 1482184704;
    arrayOfInt1[98] = 976894464;
    arrayOfInt1[99] = 1633771776;
    arrayOfInt1[100] = -555819520;
    arrayOfInt1[101] = 454761216;
    arrayOfInt1[102] = 286331136;
    arrayOfInt1[103] = 471604224;
    arrayOfInt1[104] = 842150400;
    arrayOfInt1[105] = 252645120;
    arrayOfInt1[106] = -1667458048;
    arrayOfInt1[107] = 370546176;
    arrayOfInt1[108] = 1397969664;
    arrayOfInt1[109] = 404232192;
    arrayOfInt1[110] = -218959360;
    arrayOfInt1[111] = 572662272;
    arrayOfInt1[112] = -16843264;
    arrayOfInt1[113] = 1145324544;
    arrayOfInt1[114] = -808464640;
    arrayOfInt1[115] = -1296911872;
    arrayOfInt1[116] = -1010580736;
    arrayOfInt1[117] = -1246382848;
    arrayOfInt1[118] = 2054846976;
    arrayOfInt1[119] = -1852731136;
    arrayOfInt1[120] = 606348288;
    arrayOfInt1[121] = 134744064;
    arrayOfInt1[122] = -387389440;
    arrayOfInt1[123] = -1465341952;
    arrayOfInt1[124] = 1616928768;
    arrayOfInt1[125] = -50529280;
    arrayOfInt1[126] = 1768515840;
    arrayOfInt1[127] = 1347440640;
    arrayOfInt1[''] = -1431655936;
    arrayOfInt1[''] = -791621632;
    arrayOfInt1[''] = -1600086016;
    arrayOfInt1[''] = 2105376000;
    arrayOfInt1[''] = -1583243008;
    arrayOfInt1[''] = -1987475200;
    arrayOfInt1[''] = 1650614784;
    arrayOfInt1[''] = -1751673088;
    arrayOfInt1[''] = 1414812672;
    arrayOfInt1[''] = 1532713728;
    arrayOfInt1[''] = 505290240;
    arrayOfInt1[''] = -1785359104;
    arrayOfInt1[''] = -522133504;
    arrayOfInt1[''] = -256;
    arrayOfInt1[''] = 1684300800;
    arrayOfInt1[''] = -757935616;
    arrayOfInt1[''] = 269488128;
    arrayOfInt1[''] = -993737728;
    arrayOfInt1[''] = 1212696576;
    arrayOfInt1[''] = -1549556992;
    arrayOfInt1[''] = -134744320;
    arrayOfInt1[''] = 1970631936;
    arrayOfInt1[''] = -606348544;
    arrayOfInt1[''] = -1970632192;
    arrayOfInt1[''] = 50529024;
    arrayOfInt1[''] = -421075456;
    arrayOfInt1[''] = -623191552;
    arrayOfInt1[''] = 151587072;
    arrayOfInt1[''] = 1061109504;
    arrayOfInt1[''] = -572662528;
    arrayOfInt1[''] = -1802202112;
    arrayOfInt1[' '] = -2021161216;
    arrayOfInt1['¡'] = 1549556736;
    arrayOfInt1['¢'] = -2088533248;
    arrayOfInt1['£'] = 33686016;
    arrayOfInt1['¤'] = -842150656;
    arrayOfInt1['¥'] = 1246382592;
    arrayOfInt1['¦'] = -1869574144;
    arrayOfInt1['§'] = 858993408;
    arrayOfInt1['¨'] = 1936945920;
    arrayOfInt1['©'] = 1734829824;
    arrayOfInt1['ª'] = -151587328;
    arrayOfInt1['«'] = -202116352;
    arrayOfInt1['¬'] = -1650615040;
    arrayOfInt1['­'] = 2139062016;
    arrayOfInt1['®'] = -1077952768;
    arrayOfInt1['¯'] = -488447488;
    arrayOfInt1['°'] = 1381126656;
    arrayOfInt1['±'] = -1684301056;
    arrayOfInt1['²'] = -656877568;
    arrayOfInt1['³'] = 640034304;
    arrayOfInt1['´'] = -926365696;
    arrayOfInt1['µ'] = 926365440;
    arrayOfInt1['¶'] = -960051712;
    arrayOfInt1['·'] = 993737472;
    arrayOfInt1['¸'] = -2122219264;
    arrayOfInt1['¹'] = -1768516096;
    arrayOfInt1['º'] = 1869573888;
    arrayOfInt1['»'] = 1263225600;
    arrayOfInt1['¼'] = 320017152;
    arrayOfInt1['½'] = -1094795776;
    arrayOfInt1['¾'] = 1667457792;
    arrayOfInt1['¿'] = 774778368;
    arrayOfInt1['À'] = -370546432;
    arrayOfInt1['Á'] = 2038003968;
    arrayOfInt1['Â'] = -1482184960;
    arrayOfInt1['Ã'] = -1936946176;
    arrayOfInt1['Ä'] = -1616929024;
    arrayOfInt1['Å'] = 1852730880;
    arrayOfInt1['Æ'] = -1128481792;
    arrayOfInt1['Ç'] = -1903260160;
    arrayOfInt1['È'] = 690563328;
    arrayOfInt1['É'] = -168430336;
    arrayOfInt1['Ê'] = -101058304;
    arrayOfInt1['Ë'] = -1229539840;
    arrayOfInt1['Ì'] = 791621376;
    arrayOfInt1['Í'] = -33686272;
    arrayOfInt1['Î'] = -1263225856;
    arrayOfInt1['Ï'] = 1499027712;
    arrayOfInt1['Ð'] = 2021160960;
    arrayOfInt1['Ñ'] = -1734830080;
    arrayOfInt1['Ò'] = 101058048;
    arrayOfInt1['Ó'] = 1785358848;
    arrayOfInt1['Ô'] = -404232448;
    arrayOfInt1['Õ'] = 1179010560;
    arrayOfInt1['Ö'] = 1903259904;
    arrayOfInt1['×'] = -1162167808;
    arrayOfInt1['Ø'] = -724249600;
    arrayOfInt1['Ù'] = 623191296;
    arrayOfInt1['Ú'] = -1414812928;
    arrayOfInt1['Û'] = 1111638528;
    arrayOfInt1['Ü'] = -2004318208;
    arrayOfInt1['Ý'] = -1566400000;
    arrayOfInt1['Þ'] = -1920103168;
    arrayOfInt1['ß'] = -84215296;
    arrayOfInt1['à'] = 1920102912;
    arrayOfInt1['á'] = 117901056;
    arrayOfInt1['â'] = -1179010816;
    arrayOfInt1['ã'] = 1431655680;
    arrayOfInt1['ä'] = -117901312;
    arrayOfInt1['å'] = -286331392;
    arrayOfInt1['æ'] = -1397969920;
    arrayOfInt1['ç'] = 168430080;
    arrayOfInt1['è'] = 909522432;
    arrayOfInt1['é'] = 1229539584;
    arrayOfInt1['ê'] = 707406336;
    arrayOfInt1['ë'] = 1751672832;
    arrayOfInt1['ì'] = 1010580480;
    arrayOfInt1['í'] = 943208448;
    arrayOfInt1['î'] = -235802368;
    arrayOfInt1['ï'] = -1532713984;
    arrayOfInt1['ð'] = 1077952512;
    arrayOfInt1['ñ'] = 673720320;
    arrayOfInt1['ò'] = -741092608;
    arrayOfInt1['ó'] = 2071689984;
    arrayOfInt1['ô'] = -1145324800;
    arrayOfInt1['õ'] = -909522688;
    arrayOfInt1['ö'] = 1128481536;
    arrayOfInt1['÷'] = -1044266752;
    arrayOfInt1['ø'] = 353703168;
    arrayOfInt1['ù'] = -471604480;
    arrayOfInt1['ú'] = -1381126912;
    arrayOfInt1['û'] = -185273344;
    arrayOfInt1['ü'] = 2004317952;
    arrayOfInt1['ý'] = -943208704;
    arrayOfInt1['þ'] = -2139062272;
    arrayOfInt1['ÿ'] = -1633772032;
    SBOX1_1110 = arrayOfInt1;
    int[] arrayOfInt2 = new int[256];
    arrayOfInt2[0] = 1886388336;
    arrayOfInt2[1] = 741081132;
    arrayOfInt2[2] = -1280114509;
    arrayOfInt2[3] = -1061158720;
    arrayOfInt2[4] = -454819612;
    arrayOfInt2[5] = 1465319511;
    arrayOfInt2[6] = -353763094;
    arrayOfInt2[7] = -1364328274;
    arrayOfInt2[8] = 589496355;
    arrayOfInt2[9] = 1802174571;
    arrayOfInt2[10] = 1162149957;
    arrayOfInt2[11] = -1515913051;
    arrayOfInt2[12] = -303234835;
    arrayOfInt2[13] = 1330577487;
    arrayOfInt2[14] = 488439837;
    arrayOfInt2[15] = -1835925358;
    arrayOfInt2[16] = -2038038394;
    arrayOfInt2[17] = -1347485521;
    arrayOfInt2[18] = 2088501372;
    arrayOfInt2[19] = 522125343;
    arrayOfInt2[20] = 1044250686;
    arrayOfInt2[21] = -589561636;
    arrayOfInt2[22] = 1583218782;
    arrayOfInt2[23] = 185270283;
    arrayOfInt2[24] = -1499070298;
    arrayOfInt2[25] = 960036921;
    arrayOfInt2[26] = -707460907;
    arrayOfInt2[27] = 1566376029;
    arrayOfInt2[28] = -640089895;
    arrayOfInt2[29] = 1515847770;
    arrayOfInt2[30] = 1364262993;
    arrayOfInt2[31] = 1819017324;
    arrayOfInt2[32] = -1953824629;
    arrayOfInt2[33] = -1701183334;
    arrayOfInt2[34] = -67436293;
    arrayOfInt2[35] = -1330642768;
    arrayOfInt2[36] = 1953759348;
    arrayOfInt2[37] = 724238379;
    arrayOfInt2[38] = -252706576;
    arrayOfInt2[39] = -2071723900;
    arrayOfInt2[40] = -539033377;
    arrayOfInt2[41] = -875888437;
    arrayOfInt2[42] = 875823156;
    arrayOfInt2[43] = 1987444854;
    arrayOfInt2[44] = 1835860077;
    arrayOfInt2[45] = -1448542039;
    arrayOfInt2[46] = -774831919;
    arrayOfInt2[47] = 67371012;
    arrayOfInt2[48] = 336855060;
    arrayOfInt2[49] = 976879674;
    arrayOfInt2[50] = -555876130;
    arrayOfInt2[51] = 286326801;
    arrayOfInt2[52] = 842137650;
    arrayOfInt2[53] = -1667497828;
    arrayOfInt2[54] = 1397948499;
    arrayOfInt2[55] = -219021070;
    arrayOfInt2[56] = -16908034;
    arrayOfInt2[57] = -808517425;
    arrayOfInt2[58] = -1010630461;
    arrayOfInt2[59] = 2054815866;
    arrayOfInt2[60] = 606339108;
    arrayOfInt2[61] = -387448600;
    arrayOfInt2[62] = 1616904288;
    arrayOfInt2[63] = 1768489065;
    arrayOfInt2[64] = -1431699286;
    arrayOfInt2[65] = -1600126816;
    arrayOfInt2[66] = -1583284063;
    arrayOfInt2[67] = 1650589794;
    arrayOfInt2[68] = 1414791252;
    arrayOfInt2[69] = 505282590;
    arrayOfInt2[70] = -522190624;
    arrayOfInt2[71] = 1684275300;
    arrayOfInt2[72] = 269484048;
    arrayOfInt2[74] = -1549598557;
    arrayOfInt2[75] = 1970602101;
    arrayOfInt2[76] = -1970667382;
    arrayOfInt2[77] = -421134106;
    arrayOfInt2[78] = 151584777;
    arrayOfInt2[79] = -572718883;
    arrayOfInt2[80] = -2021195641;
    arrayOfInt2[81] = -2088566653;
    arrayOfInt2[82] = -842202931;
    arrayOfInt2[83] = -1869610864;
    arrayOfInt2[84] = 1936916595;
    arrayOfInt2[85] = -151650058;
    arrayOfInt2[86] = -1650655075;
    arrayOfInt2[87] = -1078001473;
    arrayOfInt2[88] = 1381105746;
    arrayOfInt2[89] = -656932648;
    arrayOfInt2[90] = -926416696;
    arrayOfInt2[91] = -960102202;
    arrayOfInt2[92] = -2122252159;
    arrayOfInt2[93] = 1869545583;
    arrayOfInt2[94] = 320012307;
    arrayOfInt2[95] = 1667432547;
    arrayOfInt2[96] = -370605847;
    arrayOfInt2[97] = -1482227545;
    arrayOfInt2[98] = -1616969569;
    arrayOfInt2[99] = -1128529732;
    arrayOfInt2[100] = 690552873;
    arrayOfInt2[101] = -101121799;
    arrayOfInt2[102] = 791609391;
    arrayOfInt2[103] = -1263271756;
    arrayOfInt2[104] = 2021130360;
    arrayOfInt2[105] = 101056518;
    arrayOfInt2[106] = -404291353;
    arrayOfInt2[107] = 1903231089;
    arrayOfInt2[108] = -724303660;
    arrayOfInt2[109] = -1414856533;
    arrayOfInt2[110] = -2004352888;
    arrayOfInt2[111] = -1920139123;
    arrayOfInt2[112] = 1920073842;
    arrayOfInt2[113] = -1179057991;
    arrayOfInt2[114] = -117964552;
    arrayOfInt2[115] = -1398013780;
    arrayOfInt2[116] = 909508662;
    arrayOfInt2[117] = 707395626;
    arrayOfInt2[118] = 1010565180;
    arrayOfInt2[119] = -235863823;
    arrayOfInt2[120] = 1077936192;
    arrayOfInt2[121] = -741146413;
    arrayOfInt2[122] = -1145372485;
    arrayOfInt2[123] = 1128464451;
    arrayOfInt2[124] = 353697813;
    arrayOfInt2[125] = -1381171027;
    arrayOfInt2[126] = 2004287607;
    arrayOfInt2[127] = -2139094912;
    arrayOfInt2[''] = -2105409406;
    arrayOfInt2[''] = -320077588;
    arrayOfInt2[''] = 656867367;
    arrayOfInt2[''] = -437976859;
    arrayOfInt2[''] = -2054881147;
    arrayOfInt2[''] = 892665909;
    arrayOfInt2[''] = 202113036;
    arrayOfInt2[''] = 1094778945;
    arrayOfInt2[''] = -269549329;
    arrayOfInt2[''] = -1819082605;
    arrayOfInt2[''] = 421068825;
    arrayOfInt2[''] = 555810849;
    arrayOfInt2[''] = 235798542;
    arrayOfInt2[''] = 1313734734;
    arrayOfInt2[''] = 1701118053;
    arrayOfInt2[''] = -1111686979;
    arrayOfInt2[''] = -1195900744;
    arrayOfInt2[''] = -1886453617;
    arrayOfInt2[''] = -336920341;
    arrayOfInt2[''] = -825360178;
    arrayOfInt2[''] = 808452144;
    arrayOfInt2[''] = 1600061535;
    arrayOfInt2[''] = -976944955;
    arrayOfInt2[''] = 437911578;
    arrayOfInt2[''] = -505347871;
    arrayOfInt2[''] = -892731190;
    arrayOfInt2[''] = 1195835463;
    arrayOfInt2[''] = 1027407933;
    arrayOfInt2[''] = 16842753;
    arrayOfInt2[''] = -690618154;
    arrayOfInt2[''] = 1448476758;
    arrayOfInt2[''] = 1296891981;
    arrayOfInt2[' '] = 218955789;
    arrayOfInt2['¡'] = 1717960806;
    arrayOfInt2['¢'] = -859045684;
    arrayOfInt2['£'] = 757923885;
    arrayOfInt2['¤'] = 303169554;
    arrayOfInt2['¥'] = 538968096;
    arrayOfInt2['¦'] = -1313800015;
    arrayOfInt2['§'] = -1718026087;
    arrayOfInt2['¨'] = 1280049228;
    arrayOfInt2['©'] = -1027473214;
    arrayOfInt2['ª'] = 2122186878;
    arrayOfInt2['«'] = 84213765;
    arrayOfInt2['¬'] = -1212743497;
    arrayOfInt2['­'] = 825294897;
    arrayOfInt2['®'] = 387383319;
    arrayOfInt2['¯'] = -673775401;
    arrayOfInt2['°'] = 1482162264;
    arrayOfInt2['±'] = 1633747041;
    arrayOfInt2['²'] = 454754331;
    arrayOfInt2['³'] = 471597084;
    arrayOfInt2['´'] = 252641295;
    arrayOfInt2['µ'] = 370540566;
    arrayOfInt2['¶'] = 404226072;
    arrayOfInt2['·'] = 572653602;
    arrayOfInt2['¸'] = 1145307204;
    arrayOfInt2['¹'] = -1296957262;
    arrayOfInt2['º'] = -1246429003;
    arrayOfInt2['»'] = -1852768111;
    arrayOfInt2['¼'] = 134742024;
    arrayOfInt2['½'] = -1465384792;
    arrayOfInt2['¾'] = -50593540;
    arrayOfInt2['¿'] = 1347420240;
    arrayOfInt2['À'] = -791674672;
    arrayOfInt2['Á'] = 2105344125;
    arrayOfInt2['Â'] = -1987510135;
    arrayOfInt2['Ã'] = -1751711593;
    arrayOfInt2['Ä'] = 1532690523;
    arrayOfInt2['Å'] = -1785397099;
    arrayOfInt2['Æ'] = -65281;
    arrayOfInt2['Ç'] = -757989166;
    arrayOfInt2['È'] = -993787708;
    arrayOfInt2['É'] = 1212678216;
    arrayOfInt2['Ê'] = -134807305;
    arrayOfInt2['Ë'] = -606404389;
    arrayOfInt2['Ì'] = 50528259;
    arrayOfInt2['Í'] = -623247142;
    arrayOfInt2['Î'] = 1061093439;
    arrayOfInt2['Ï'] = -1802239852;
    arrayOfInt2['Ð'] = 1549533276;
    arrayOfInt2['Ñ'] = 33685506;
    arrayOfInt2['Ò'] = 1246363722;
    arrayOfInt2['Ó'] = 858980403;
    arrayOfInt2['Ô'] = 1734803559;
    arrayOfInt2['Õ'] = -202178317;
    arrayOfInt2['Ö'] = 2139029631;
    arrayOfInt2['×'] = -488505118;
    arrayOfInt2['Ø'] = -1684340581;
    arrayOfInt2['Ù'] = 640024614;
    arrayOfInt2['Ú'] = 926351415;
    arrayOfInt2['Û'] = 993722427;
    arrayOfInt2['Ü'] = -1768554346;
    arrayOfInt2['Ý'] = 1263206475;
    arrayOfInt2['Þ'] = -1094844226;
    arrayOfInt2['ß'] = 774766638;
    arrayOfInt2['à'] = 2037973113;
    arrayOfInt2['á'] = -1936981876;
    arrayOfInt2['â'] = 1852702830;
    arrayOfInt2['ã'] = -1903296370;
    arrayOfInt2['ä'] = -168492811;
    arrayOfInt2['å'] = -1229586250;
    arrayOfInt2['æ'] = -33750787;
    arrayOfInt2['ç'] = 1499005017;
    arrayOfInt2['è'] = -1734868840;
    arrayOfInt2['é'] = 1785331818;
    arrayOfInt2['ê'] = 1178992710;
    arrayOfInt2['ë'] = -1162215238;
    arrayOfInt2['ì'] = 623181861;
    arrayOfInt2['í'] = 1111621698;
    arrayOfInt2['î'] = -1566441310;
    arrayOfInt2['ï'] = -84279046;
    arrayOfInt2['ð'] = 117899271;
    arrayOfInt2['ñ'] = 1431634005;
    arrayOfInt2['ò'] = -286392082;
    arrayOfInt2['ó'] = 168427530;
    arrayOfInt2['ô'] = 1229520969;
    arrayOfInt2['õ'] = 1751646312;
    arrayOfInt2['ö'] = 943194168;
    arrayOfInt2['÷'] = -1532755804;
    arrayOfInt2['ø'] = 673710120;
    arrayOfInt2['ù'] = 2071658619;
    arrayOfInt2['ú'] = -909573943;
    arrayOfInt2['û'] = -1044315967;
    arrayOfInt2['ü'] = -471662365;
    arrayOfInt2['ý'] = -185335564;
    arrayOfInt2['þ'] = -943259449;
    arrayOfInt2['ÿ'] = -1633812322;
    SBOX4_4404 = arrayOfInt2;
    int[] arrayOfInt3 = new int[256];
    arrayOfInt3[0] = 14737632;
    arrayOfInt3[1] = 328965;
    arrayOfInt3[2] = 5789784;
    arrayOfInt3[3] = 14277081;
    arrayOfInt3[4] = 6776679;
    arrayOfInt3[5] = 5131854;
    arrayOfInt3[6] = 8487297;
    arrayOfInt3[7] = 13355979;
    arrayOfInt3[8] = 13224393;
    arrayOfInt3[9] = 723723;
    arrayOfInt3[10] = 11447982;
    arrayOfInt3[11] = 6974058;
    arrayOfInt3[12] = 14013909;
    arrayOfInt3[13] = 1579032;
    arrayOfInt3[14] = 6118749;
    arrayOfInt3[15] = 8553090;
    arrayOfInt3[16] = 4605510;
    arrayOfInt3[17] = 14671839;
    arrayOfInt3[18] = 14079702;
    arrayOfInt3[19] = 2565927;
    arrayOfInt3[20] = 9079434;
    arrayOfInt3[21] = 3289650;
    arrayOfInt3[22] = 4934475;
    arrayOfInt3[23] = 4342338;
    arrayOfInt3[24] = 14408667;
    arrayOfInt3[25] = 1842204;
    arrayOfInt3[26] = 10395294;
    arrayOfInt3[27] = 10263708;
    arrayOfInt3[28] = 3815994;
    arrayOfInt3[29] = 13290186;
    arrayOfInt3[30] = 2434341;
    arrayOfInt3[31] = 8092539;
    arrayOfInt3[32] = 855309;
    arrayOfInt3[33] = 7434609;
    arrayOfInt3[34] = 6250335;
    arrayOfInt3[35] = 2039583;
    arrayOfInt3[36] = 16316664;
    arrayOfInt3[37] = 14145495;
    arrayOfInt3[38] = 4079166;
    arrayOfInt3[39] = 10329501;
    arrayOfInt3[40] = 8158332;
    arrayOfInt3[41] = 6316128;
    arrayOfInt3[42] = 12171705;
    arrayOfInt3[43] = 12500670;
    arrayOfInt3[44] = 12369084;
    arrayOfInt3[45] = 9145227;
    arrayOfInt3[46] = 1447446;
    arrayOfInt3[47] = 3421236;
    arrayOfInt3[48] = 5066061;
    arrayOfInt3[49] = 12829635;
    arrayOfInt3[50] = 7500402;
    arrayOfInt3[51] = 9803157;
    arrayOfInt3[52] = 11250603;
    arrayOfInt3[53] = 9342606;
    arrayOfInt3[54] = 12237498;
    arrayOfInt3[55] = 8026746;
    arrayOfInt3[56] = 11776947;
    arrayOfInt3[57] = 131586;
    arrayOfInt3[58] = 11842740;
    arrayOfInt3[59] = 11382189;
    arrayOfInt3[60] = 10658466;
    arrayOfInt3[61] = 11316396;
    arrayOfInt3[62] = 14211288;
    arrayOfInt3[63] = 10132122;
    arrayOfInt3[64] = 1513239;
    arrayOfInt3[65] = 1710618;
    arrayOfInt3[66] = 3487029;
    arrayOfInt3[67] = 13421772;
    arrayOfInt3[68] = 16250871;
    arrayOfInt3[69] = 10066329;
    arrayOfInt3[70] = 6381921;
    arrayOfInt3[71] = 5921370;
    arrayOfInt3[72] = 15263976;
    arrayOfInt3[73] = 2368548;
    arrayOfInt3[74] = 5658198;
    arrayOfInt3[75] = 4210752;
    arrayOfInt3[76] = 14803425;
    arrayOfInt3[77] = 6513507;
    arrayOfInt3[78] = 592137;
    arrayOfInt3[79] = 3355443;
    arrayOfInt3[80] = 12566463;
    arrayOfInt3[81] = 10000536;
    arrayOfInt3[82] = 9934743;
    arrayOfInt3[83] = 8750469;
    arrayOfInt3[84] = 6842472;
    arrayOfInt3[85] = 16579836;
    arrayOfInt3[86] = 15527148;
    arrayOfInt3[87] = 657930;
    arrayOfInt3[88] = 14342874;
    arrayOfInt3[89] = 7303023;
    arrayOfInt3[90] = 5460819;
    arrayOfInt3[91] = 6447714;
    arrayOfInt3[92] = 10724259;
    arrayOfInt3[93] = 3026478;
    arrayOfInt3[94] = 526344;
    arrayOfInt3[95] = 11513775;
    arrayOfInt3[96] = 2631720;
    arrayOfInt3[97] = 11579568;
    arrayOfInt3[98] = 7631988;
    arrayOfInt3[99] = 12763842;
    arrayOfInt3[100] = 12434877;
    arrayOfInt3[101] = 3552822;
    arrayOfInt3[102] = 2236962;
    arrayOfInt3[103] = 3684408;
    arrayOfInt3[104] = 6579300;
    arrayOfInt3[105] = 1973790;
    arrayOfInt3[106] = 3750201;
    arrayOfInt3[107] = 2894892;
    arrayOfInt3[108] = 10921638;
    arrayOfInt3[109] = 3158064;
    arrayOfInt3[110] = 15066597;
    arrayOfInt3[111] = 4473924;
    arrayOfInt3[112] = 16645629;
    arrayOfInt3[113] = 8947848;
    arrayOfInt3[114] = 10461087;
    arrayOfInt3[115] = 6645093;
    arrayOfInt3[116] = 8882055;
    arrayOfInt3[117] = 7039851;
    arrayOfInt3[118] = 16053492;
    arrayOfInt3[119] = 2302755;
    arrayOfInt3[120] = 4737096;
    arrayOfInt3[121] = 1052688;
    arrayOfInt3[122] = 13750737;
    arrayOfInt3[123] = 5329233;
    arrayOfInt3[124] = 12632256;
    arrayOfInt3[125] = 16382457;
    arrayOfInt3[126] = 13816530;
    arrayOfInt3[127] = 10526880;
    arrayOfInt3[''] = 5592405;
    arrayOfInt3[''] = 10592673;
    arrayOfInt3[''] = 4276545;
    arrayOfInt3[''] = 16448250;
    arrayOfInt3[''] = 4408131;
    arrayOfInt3[''] = 1250067;
    arrayOfInt3[''] = 12895428;
    arrayOfInt3[''] = 3092271;
    arrayOfInt3[''] = 11053224;
    arrayOfInt3[''] = 11974326;
    arrayOfInt3[''] = 3947580;
    arrayOfInt3[''] = 2829099;
    arrayOfInt3[''] = 12698049;
    arrayOfInt3[''] = 16777215;
    arrayOfInt3[''] = 13158600;
    arrayOfInt3[''] = 10855845;
    arrayOfInt3[''] = 2105376;
    arrayOfInt3[''] = 9013641;
    arrayOfInt3[''] = 9474192;
    arrayOfInt3[''] = 4671303;
    arrayOfInt3[''] = 15724527;
    arrayOfInt3[''] = 15395562;
    arrayOfInt3[''] = 12040119;
    arrayOfInt3[''] = 1381653;
    arrayOfInt3[''] = 394758;
    arrayOfInt3[''] = 13487565;
    arrayOfInt3[''] = 11908533;
    arrayOfInt3[''] = 1184274;
    arrayOfInt3[''] = 8289918;
    arrayOfInt3[''] = 12303291;
    arrayOfInt3[''] = 2697513;
    arrayOfInt3[' '] = 986895;
    arrayOfInt3['¡'] = 12105912;
    arrayOfInt3['¢'] = 460551;
    arrayOfInt3['£'] = 263172;
    arrayOfInt3['¤'] = 10197915;
    arrayOfInt3['¥'] = 9737364;
    arrayOfInt3['¦'] = 2171169;
    arrayOfInt3['§'] = 6710886;
    arrayOfInt3['¨'] = 15132390;
    arrayOfInt3['©'] = 13553358;
    arrayOfInt3['ª'] = 15592941;
    arrayOfInt3['«'] = 15198183;
    arrayOfInt3['¬'] = 3881787;
    arrayOfInt3['­'] = 16711422;
    arrayOfInt3['®'] = 8355711;
    arrayOfInt3['¯'] = 12961221;
    arrayOfInt3['°'] = 10790052;
    arrayOfInt3['±'] = 3618615;
    arrayOfInt3['²'] = 11645361;
    arrayOfInt3['³'] = 5000268;
    arrayOfInt3['´'] = 9539985;
    arrayOfInt3['µ'] = 7237230;
    arrayOfInt3['¶'] = 9276813;
    arrayOfInt3['·'] = 7763574;
    arrayOfInt3['¸'] = 197379;
    arrayOfInt3['¹'] = 2960685;
    arrayOfInt3['º'] = 14606046;
    arrayOfInt3['»'] = 9868950;
    arrayOfInt3['¼'] = 2500134;
    arrayOfInt3['½'] = 8224125;
    arrayOfInt3['¾'] = 13027014;
    arrayOfInt3['¿'] = 6052956;
    arrayOfInt3['À'] = 13882323;
    arrayOfInt3['Á'] = 15921906;
    arrayOfInt3['Â'] = 5197647;
    arrayOfInt3['Ã'] = 1644825;
    arrayOfInt3['Ä'] = 4144959;
    arrayOfInt3['Å'] = 14474460;
    arrayOfInt3['Æ'] = 7960953;
    arrayOfInt3['Ç'] = 1907997;
    arrayOfInt3['È'] = 5395026;
    arrayOfInt3['É'] = 15461355;
    arrayOfInt3['Ê'] = 15987699;
    arrayOfInt3['Ë'] = 7171437;
    arrayOfInt3['Ì'] = 6184542;
    arrayOfInt3['Í'] = 16514043;
    arrayOfInt3['Î'] = 6908265;
    arrayOfInt3['Ï'] = 11711154;
    arrayOfInt3['Ð'] = 15790320;
    arrayOfInt3['Ñ'] = 3223857;
    arrayOfInt3['Ò'] = 789516;
    arrayOfInt3['Ó'] = 13948116;
    arrayOfInt3['Ô'] = 13619151;
    arrayOfInt3['Õ'] = 9211020;
    arrayOfInt3['Ö'] = 14869218;
    arrayOfInt3['×'] = 7697781;
    arrayOfInt3['Ø'] = 11119017;
    arrayOfInt3['Ù'] = 4868682;
    arrayOfInt3['Ú'] = 5723991;
    arrayOfInt3['Û'] = 8684676;
    arrayOfInt3['Ü'] = 1118481;
    arrayOfInt3['Ý'] = 4539717;
    arrayOfInt3['Þ'] = 1776411;
    arrayOfInt3['ß'] = 16119285;
    arrayOfInt3['à'] = 15000804;
    arrayOfInt3['á'] = 921102;
    arrayOfInt3['â'] = 7566195;
    arrayOfInt3['ã'] = 11184810;
    arrayOfInt3['ä'] = 15856113;
    arrayOfInt3['å'] = 14540253;
    arrayOfInt3['æ'] = 5855577;
    arrayOfInt3['ç'] = 1315860;
    arrayOfInt3['è'] = 7105644;
    arrayOfInt3['é'] = 9605778;
    arrayOfInt3['ê'] = 5526612;
    arrayOfInt3['ë'] = 13684944;
    arrayOfInt3['ì'] = 7895160;
    arrayOfInt3['í'] = 7368816;
    arrayOfInt3['î'] = 14935011;
    arrayOfInt3['ï'] = 4802889;
    arrayOfInt3['ð'] = 8421504;
    arrayOfInt3['ñ'] = 5263440;
    arrayOfInt3['ò'] = 10987431;
    arrayOfInt3['ó'] = 16185078;
    arrayOfInt3['ô'] = 7829367;
    arrayOfInt3['õ'] = 9671571;
    arrayOfInt3['ö'] = 8816262;
    arrayOfInt3['÷'] = 8618883;
    arrayOfInt3['ø'] = 2763306;
    arrayOfInt3['ù'] = 13092807;
    arrayOfInt3['ú'] = 5987163;
    arrayOfInt3['û'] = 15329769;
    arrayOfInt3['ü'] = 15658734;
    arrayOfInt3['ý'] = 9408399;
    arrayOfInt3['þ'] = 65793;
    arrayOfInt3['ÿ'] = 4013373;
    SBOX2_0222 = arrayOfInt3;
    int[] arrayOfInt4 = new int[256];
    arrayOfInt4[0] = 939538488;
    arrayOfInt4[1] = 1090535745;
    arrayOfInt4[2] = 369104406;
    arrayOfInt4[3] = 1979741814;
    arrayOfInt4[4] = -654255655;
    arrayOfInt4[5] = -1828678765;
    arrayOfInt4[6] = 1610637408;
    arrayOfInt4[7] = -234818830;
    arrayOfInt4[8] = 1912631922;
    arrayOfInt4[9] = -1040137534;
    arrayOfInt4[10] = -1426019413;
    arrayOfInt4[11] = -1711236454;
    arrayOfInt4[12] = 1962964341;
    arrayOfInt4[13] = 100664838;
    arrayOfInt4[14] = 1459640151;
    arrayOfInt4[15] = -1610571616;
    arrayOfInt4[16] = -1862233711;
    arrayOfInt4[17] = -150931465;
    arrayOfInt4[18] = -1258244683;
    arrayOfInt4[19] = -922695223;
    arrayOfInt4[20] = -1577016670;
    arrayOfInt4[21] = -1946121076;
    arrayOfInt4[22] = -771697966;
    arrayOfInt4[23] = -1879011184;
    arrayOfInt4[24] = -167708938;
    arrayOfInt4[25] = 117442311;
    arrayOfInt4[26] = -1493129305;
    arrayOfInt4[27] = 654321447;
    arrayOfInt4[28] = -1912566130;
    arrayOfInt4[29] = -1308577102;
    arrayOfInt4[30] = 1224755529;
    arrayOfInt4[31] = -570368290;
    arrayOfInt4[32] = 1124090691;
    arrayOfInt4[33] = 1543527516;
    arrayOfInt4[34] = -687810601;
    arrayOfInt4[35] = -956250169;
    arrayOfInt4[36] = 1040203326;
    arrayOfInt4[37] = -184486411;
    arrayOfInt4[38] = -1895788657;
    arrayOfInt4[39] = 1728079719;
    arrayOfInt4[40] = 520101663;
    arrayOfInt4[41] = 402659352;
    arrayOfInt4[42] = 1845522030;
    arrayOfInt4[43] = -1358909521;
    arrayOfInt4[44] = 788541231;
    arrayOfInt4[45] = -503258398;
    arrayOfInt4[46] = -2063563387;
    arrayOfInt4[47] = 218107149;
    arrayOfInt4[48] = 1392530259;
    arrayOfInt4[49] = -268373776;
    arrayOfInt4[50] = -1677681508;
    arrayOfInt4[51] = 1694524773;
    arrayOfInt4[52] = -369038614;
    arrayOfInt4[53] = -1560239197;
    arrayOfInt4[54] = -1375686994;
    arrayOfInt4[55] = -1644126562;
    arrayOfInt4[56] = -335483668;
    arrayOfInt4[57] = -2147450752;
    arrayOfInt4[58] = 754986285;
    arrayOfInt4[59] = 1795189611;
    arrayOfInt4[60] = -1476351832;
    arrayOfInt4[61] = 721431339;
    arrayOfInt4[62] = 905983542;
    arrayOfInt4[63] = -1509906778;
    arrayOfInt4[64] = -989805115;
    arrayOfInt4[65] = -2046785914;
    arrayOfInt4[66] = 1291865421;
    arrayOfInt4[67] = 855651123;
    arrayOfInt4[68] = -50266627;
    arrayOfInt4[69] = 1711302246;
    arrayOfInt4[70] = 1476417624;
    arrayOfInt4[71] = -1778346346;
    arrayOfInt4[72] = 973093434;
    arrayOfInt4[73] = 150997257;
    arrayOfInt4[74] = -1795123819;
    arrayOfInt4[75] = 268439568;
    arrayOfInt4[76] = 2013296760;
    arrayOfInt4[77] = -671033128;
    arrayOfInt4[78] = 1107313218;
    arrayOfInt4[79] = -872362804;
    arrayOfInt4[80] = -285151249;
    arrayOfInt4[81] = 637543974;
    arrayOfInt4[82] = -452925979;
    arrayOfInt4[83] = 1627414881;
    arrayOfInt4[84] = 436214298;
    arrayOfInt4[85] = 1056980799;
    arrayOfInt4[86] = 989870907;
    arrayOfInt4[87] = -2113895806;
    arrayOfInt4[88] = -1241467210;
    arrayOfInt4[89] = -620700709;
    arrayOfInt4[90] = -738143020;
    arrayOfInt4[91] = -1744791400;
    arrayOfInt4[92] = -402593560;
    arrayOfInt4[93] = -1962898549;
    arrayOfInt4[94] = 33554946;
    arrayOfInt4[95] = -352261141;
    arrayOfInt4[96] = 167774730;
    arrayOfInt4[97] = 738208812;
    arrayOfInt4[98] = 486546717;
    arrayOfInt4[99] = -1342132048;
    arrayOfInt4[100] = 1862299503;
    arrayOfInt4[101] = -1929343603;
    arrayOfInt4[102] = -2013230968;
    arrayOfInt4[103] = 234884622;
    arrayOfInt4[104] = 419436825;
    arrayOfInt4[105] = -2030008441;
    arrayOfInt4[106] = 1308642894;
    arrayOfInt4[107] = 184552203;
    arrayOfInt4[108] = -1459574359;
    arrayOfInt4[109] = 201329676;
    arrayOfInt4[110] = 2030074233;
    arrayOfInt4[111] = 285217041;
    arrayOfInt4[112] = 2130739071;
    arrayOfInt4[113] = 570434082;
    arrayOfInt4[114] = -419371033;
    arrayOfInt4[115] = 1493195097;
    arrayOfInt4[116] = -520035871;
    arrayOfInt4[117] = -637478182;
    arrayOfInt4[118] = 1023425853;
    arrayOfInt4[119] = -939472696;
    arrayOfInt4[120] = 301994514;
    arrayOfInt4[121] = 67109892;
    arrayOfInt4[122] = 1946186868;
    arrayOfInt4[123] = 1409307732;
    arrayOfInt4[124] = 805318704;
    arrayOfInt4[125] = 2113961598;
    arrayOfInt4[126] = -1275022156;
    arrayOfInt4[127] = 671098920;
    arrayOfInt4[''] = 1426085205;
    arrayOfInt4[''] = 1744857192;
    arrayOfInt4[''] = 1342197840;
    arrayOfInt4[''] = -1107247426;
    arrayOfInt4[''] = -805252912;
    arrayOfInt4[''] = -1006582588;
    arrayOfInt4[''] = 822096177;
    arrayOfInt4[''] = -889140277;
    arrayOfInt4[''] = 704653866;
    arrayOfInt4[''] = -1392464467;
    arrayOfInt4[''] = 251662095;
    arrayOfInt4[''] = -905917750;
    arrayOfInt4[''] = 1879076976;
    arrayOfInt4[''] = -16711681;
    arrayOfInt4[''] = 838873650;
    arrayOfInt4[''] = 1761634665;
    arrayOfInt4[''] = 134219784;
    arrayOfInt4[''] = 1644192354;
    arrayOfInt4[''] = 603989028;
    arrayOfInt4[''] = -788475439;
    arrayOfInt4[''] = -83821573;
    arrayOfInt4[''] = -1174357318;
    arrayOfInt4[''] = -318706195;
    arrayOfInt4[''] = 1157645637;
    arrayOfInt4[''] = -2130673279;
    arrayOfInt4[''] = 1929409395;
    arrayOfInt4[''] = 1828744557;
    arrayOfInt4[''] = -2080340860;
    arrayOfInt4[''] = -1627349089;
    arrayOfInt4[''] = -301928722;
    arrayOfInt4[''] = 1241533002;
    arrayOfInt4[' '] = -1023360061;
    arrayOfInt4['¡'] = 771763758;
    arrayOfInt4['¢'] = -1056915007;
    arrayOfInt4['£'] = 16777473;
    arrayOfInt4['¤'] = -436148506;
    arrayOfInt4['¥'] = 620766501;
    arrayOfInt4['¦'] = 1207978056;
    arrayOfInt4['§'] = -1728013927;
    arrayOfInt4['¨'] = -1191134791;
    arrayOfInt4['©'] = -1291799629;
    arrayOfInt4['ª'] = 2063629179;
    arrayOfInt4['«'] = -117376519;
    arrayOfInt4['¬'] = -838807858;
    arrayOfInt4['­'] = -1090469953;
    arrayOfInt4['®'] = -553590817;
    arrayOfInt4['¯'] = 1895854449;
    arrayOfInt4['°'] = 687876393;
    arrayOfInt4['±'] = -855585331;
    arrayOfInt4['²'] = 1811967084;
    arrayOfInt4['³'] = 318771987;
    arrayOfInt4['´'] = 1677747300;
    arrayOfInt4['µ'] = -1694458981;
    arrayOfInt4['¶'] = 1660969827;
    arrayOfInt4['·'] = -1660904035;
    arrayOfInt4['¸'] = -1073692480;
    arrayOfInt4['¹'] = 1258310475;
    arrayOfInt4['º'] = -1224689737;
    arrayOfInt4['»'] = -1526684251;
    arrayOfInt4['¼'] = -1996453495;
    arrayOfInt4['½'] = 1593859935;
    arrayOfInt4['¾'] = -1325354575;
    arrayOfInt4['¿'] = 385881879;
    arrayOfInt4['À'] = -201263884;
    arrayOfInt4['Á'] = -1140802372;
    arrayOfInt4['Â'] = -754920493;
    arrayOfInt4['Ã'] = 1174423110;
    arrayOfInt4['Ä'] = -822030385;
    arrayOfInt4['Å'] = 922761015;
    arrayOfInt4['Æ'] = 1577082462;
    arrayOfInt4['Ç'] = 1191200583;
    arrayOfInt4['È'] = -1811901292;
    arrayOfInt4['É'] = -100599046;
    arrayOfInt4['Ê'] = -67044100;
    arrayOfInt4['Ë'] = 1526750043;
    arrayOfInt4['Ì'] = -1761568873;
    arrayOfInt4['Í'] = -33489154;
    arrayOfInt4['Î'] = 1509972570;
    arrayOfInt4['Ï'] = -1409241940;
    arrayOfInt4['Ð'] = 1006648380;
    arrayOfInt4['Ñ'] = 1275087948;
    arrayOfInt4['Ò'] = 50332419;
    arrayOfInt4['Ó'] = 889206069;
    arrayOfInt4['Ô'] = -218041357;
    arrayOfInt4['Õ'] = 587211555;
    arrayOfInt4['Ö'] = -1207912264;
    arrayOfInt4['×'] = 1560304989;
    arrayOfInt4['Ø'] = 1778412138;
    arrayOfInt4['Ù'] = -1845456238;
    arrayOfInt4['Ú'] = -721365547;
    arrayOfInt4['Û'] = 553656609;
    arrayOfInt4['Ü'] = 1140868164;
    arrayOfInt4['Ý'] = 1358975313;
    arrayOfInt4['Þ'] = -973027642;
    arrayOfInt4['ß'] = 2097184125;
    arrayOfInt4['à'] = 956315961;
    arrayOfInt4['á'] = -2097118333;
    arrayOfInt4['â'] = -603923236;
    arrayOfInt4['ã'] = -1442796886;
    arrayOfInt4['ä'] = 2080406652;
    arrayOfInt4['å'] = 1996519287;
    arrayOfInt4['æ'] = 1442862678;
    arrayOfInt4['ç'] = 83887365;
    arrayOfInt4['è'] = 452991771;
    arrayOfInt4['é'] = -1543461724;
    arrayOfInt4['ê'] = 352326933;
    arrayOfInt4['ë'] = 872428596;
    arrayOfInt4['ì'] = 503324190;
    arrayOfInt4['í'] = 469769244;
    arrayOfInt4['î'] = -134153992;
    arrayOfInt4['ï'] = 1375752786;
    arrayOfInt4['ð'] = 536879136;
    arrayOfInt4['ñ'] = 335549460;
    arrayOfInt4['ò'] = -385816087;
    arrayOfInt4['ó'] = -1124024899;
    arrayOfInt4['ô'] = -587145763;
    arrayOfInt4['õ'] = -469703452;
    arrayOfInt4['ö'] = -1593794143;
    arrayOfInt4['÷'] = -536813344;
    arrayOfInt4['ø'] = -1979676022;
    arrayOfInt4['ù'] = -251596303;
    arrayOfInt4['ú'] = -704588074;
    arrayOfInt4['û'] = 2046851706;
    arrayOfInt4['ü'] = -1157579845;
    arrayOfInt4['ý'] = -486480925;
    arrayOfInt4['þ'] = 1073758272;
    arrayOfInt4['ÿ'] = 1325420367;
  }

  private int bytes2int(byte[] paramArrayOfByte, int paramInt)
  {
    int i = 0;
    for (int j = 0; ; j++)
    {
      if (j >= 4)
        return i;
      i = (i << 8) + (0xFF & paramArrayOfByte[(j + paramInt)]);
    }
  }

  private void camelliaF2(int[] paramArrayOfInt1, int[] paramArrayOfInt2, int paramInt)
  {
    int i = paramArrayOfInt1[0] ^ paramArrayOfInt2[(paramInt + 0)];
    int j = SBOX4_4404[(i & 0xFF)] ^ SBOX3_3033[(0xFF & i >>> 8)] ^ SBOX2_0222[(0xFF & i >>> 16)] ^ SBOX1_1110[(0xFF & i >>> 24)];
    int k = paramArrayOfInt1[1] ^ paramArrayOfInt2[(paramInt + 1)];
    int m = SBOX1_1110[(k & 0xFF)] ^ SBOX4_4404[(0xFF & k >>> 8)] ^ SBOX3_3033[(0xFF & k >>> 16)] ^ SBOX2_0222[(0xFF & k >>> 24)];
    paramArrayOfInt1[2] ^= j ^ m;
    paramArrayOfInt1[3] ^= j ^ m ^ rightRotate(j, 8);
    int n = paramArrayOfInt1[2] ^ paramArrayOfInt2[(paramInt + 2)];
    int i1 = SBOX4_4404[(n & 0xFF)] ^ SBOX3_3033[(0xFF & n >>> 8)] ^ SBOX2_0222[(0xFF & n >>> 16)] ^ SBOX1_1110[(0xFF & n >>> 24)];
    int i2 = paramArrayOfInt1[3] ^ paramArrayOfInt2[(paramInt + 3)];
    int i3 = SBOX1_1110[(i2 & 0xFF)] ^ SBOX4_4404[(0xFF & i2 >>> 8)] ^ SBOX3_3033[(0xFF & i2 >>> 16)] ^ SBOX2_0222[(0xFF & i2 >>> 24)];
    paramArrayOfInt1[0] ^= i1 ^ i3;
    paramArrayOfInt1[1] ^= i1 ^ i3 ^ rightRotate(i1, 8);
  }

  private void camelliaFLs(int[] paramArrayOfInt1, int[] paramArrayOfInt2, int paramInt)
  {
    paramArrayOfInt1[1] ^= leftRotate(paramArrayOfInt1[0] & paramArrayOfInt2[(paramInt + 0)], 1);
    paramArrayOfInt1[0] ^= (paramArrayOfInt2[(paramInt + 1)] | paramArrayOfInt1[1]);
    paramArrayOfInt1[2] ^= (paramArrayOfInt2[(paramInt + 3)] | paramArrayOfInt1[3]);
    paramArrayOfInt1[3] ^= leftRotate(paramArrayOfInt2[(paramInt + 2)] & paramArrayOfInt1[2], 1);
  }

  private static void decroldq(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    paramArrayOfInt2[(paramInt3 + 2)] = (paramArrayOfInt1[(paramInt2 + 0)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 1)] >>> 32 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 3)] = (paramArrayOfInt1[(paramInt2 + 1)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 2)] >>> 32 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 0)] = (paramArrayOfInt1[(paramInt2 + 2)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 3)] >>> 32 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 1)] = (paramArrayOfInt1[(paramInt2 + 3)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 0)] >>> 32 - paramInt1);
    paramArrayOfInt1[(paramInt2 + 0)] = paramArrayOfInt2[(paramInt3 + 2)];
    paramArrayOfInt1[(paramInt2 + 1)] = paramArrayOfInt2[(paramInt3 + 3)];
    paramArrayOfInt1[(paramInt2 + 2)] = paramArrayOfInt2[(paramInt3 + 0)];
    paramArrayOfInt1[(paramInt2 + 3)] = paramArrayOfInt2[(paramInt3 + 1)];
  }

  private static void decroldqo32(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    paramArrayOfInt2[(paramInt3 + 2)] = (paramArrayOfInt1[(paramInt2 + 1)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 2)] >>> 64 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 3)] = (paramArrayOfInt1[(paramInt2 + 2)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 3)] >>> 64 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 0)] = (paramArrayOfInt1[(paramInt2 + 3)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 0)] >>> 64 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 1)] = (paramArrayOfInt1[(paramInt2 + 0)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 1)] >>> 64 - paramInt1);
    paramArrayOfInt1[(paramInt2 + 0)] = paramArrayOfInt2[(paramInt3 + 2)];
    paramArrayOfInt1[(paramInt2 + 1)] = paramArrayOfInt2[(paramInt3 + 3)];
    paramArrayOfInt1[(paramInt2 + 2)] = paramArrayOfInt2[(paramInt3 + 0)];
    paramArrayOfInt1[(paramInt2 + 3)] = paramArrayOfInt2[(paramInt3 + 1)];
  }

  private void int2bytes(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    for (int i = 0; ; i++)
    {
      if (i >= 4)
        return;
      paramArrayOfByte[(paramInt2 + (3 - i))] = ((byte)paramInt1);
      paramInt1 >>>= 8;
    }
  }

  private static int leftRotate(int paramInt1, int paramInt2)
  {
    return (paramInt1 << paramInt2) + (paramInt1 >>> 32 - paramInt2);
  }

  private int processBlock128(byte[] paramArrayOfByte1, int paramInt1, byte[] paramArrayOfByte2, int paramInt2)
  {
    for (int i = 0; ; i++)
    {
      if (i >= 4)
      {
        camelliaF2(this.state, this.subkey, 0);
        camelliaF2(this.state, this.subkey, 4);
        camelliaF2(this.state, this.subkey, 8);
        camelliaFLs(this.state, this.ke, 0);
        camelliaF2(this.state, this.subkey, 12);
        camelliaF2(this.state, this.subkey, 16);
        camelliaF2(this.state, this.subkey, 20);
        camelliaFLs(this.state, this.ke, 4);
        camelliaF2(this.state, this.subkey, 24);
        camelliaF2(this.state, this.subkey, 28);
        camelliaF2(this.state, this.subkey, 32);
        int[] arrayOfInt2 = this.state;
        arrayOfInt2[2] ^= this.kw[4];
        int[] arrayOfInt3 = this.state;
        arrayOfInt3[3] ^= this.kw[5];
        int[] arrayOfInt4 = this.state;
        arrayOfInt4[0] ^= this.kw[6];
        int[] arrayOfInt5 = this.state;
        arrayOfInt5[1] ^= this.kw[7];
        int2bytes(this.state[2], paramArrayOfByte2, paramInt2);
        int2bytes(this.state[3], paramArrayOfByte2, paramInt2 + 4);
        int2bytes(this.state[0], paramArrayOfByte2, paramInt2 + 8);
        int2bytes(this.state[1], paramArrayOfByte2, paramInt2 + 12);
        return 16;
      }
      this.state[i] = bytes2int(paramArrayOfByte1, paramInt1 + i * 4);
      int[] arrayOfInt1 = this.state;
      arrayOfInt1[i] ^= this.kw[i];
    }
  }

  private int processBlock192or256(byte[] paramArrayOfByte1, int paramInt1, byte[] paramArrayOfByte2, int paramInt2)
  {
    for (int i = 0; ; i++)
    {
      if (i >= 4)
      {
        camelliaF2(this.state, this.subkey, 0);
        camelliaF2(this.state, this.subkey, 4);
        camelliaF2(this.state, this.subkey, 8);
        camelliaFLs(this.state, this.ke, 0);
        camelliaF2(this.state, this.subkey, 12);
        camelliaF2(this.state, this.subkey, 16);
        camelliaF2(this.state, this.subkey, 20);
        camelliaFLs(this.state, this.ke, 4);
        camelliaF2(this.state, this.subkey, 24);
        camelliaF2(this.state, this.subkey, 28);
        camelliaF2(this.state, this.subkey, 32);
        camelliaFLs(this.state, this.ke, 8);
        camelliaF2(this.state, this.subkey, 36);
        camelliaF2(this.state, this.subkey, 40);
        camelliaF2(this.state, this.subkey, 44);
        int[] arrayOfInt2 = this.state;
        arrayOfInt2[2] ^= this.kw[4];
        int[] arrayOfInt3 = this.state;
        arrayOfInt3[3] ^= this.kw[5];
        int[] arrayOfInt4 = this.state;
        arrayOfInt4[0] ^= this.kw[6];
        int[] arrayOfInt5 = this.state;
        arrayOfInt5[1] ^= this.kw[7];
        int2bytes(this.state[2], paramArrayOfByte2, paramInt2);
        int2bytes(this.state[3], paramArrayOfByte2, paramInt2 + 4);
        int2bytes(this.state[0], paramArrayOfByte2, paramInt2 + 8);
        int2bytes(this.state[1], paramArrayOfByte2, paramInt2 + 12);
        return 16;
      }
      this.state[i] = bytes2int(paramArrayOfByte1, paramInt1 + i * 4);
      int[] arrayOfInt1 = this.state;
      arrayOfInt1[i] ^= this.kw[i];
    }
  }

  private static int rightRotate(int paramInt1, int paramInt2)
  {
    return (paramInt1 >>> paramInt2) + (paramInt1 << 32 - paramInt2);
  }

  private static void roldq(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    paramArrayOfInt2[(paramInt3 + 0)] = (paramArrayOfInt1[(paramInt2 + 0)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 1)] >>> 32 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 1)] = (paramArrayOfInt1[(paramInt2 + 1)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 2)] >>> 32 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 2)] = (paramArrayOfInt1[(paramInt2 + 2)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 3)] >>> 32 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 3)] = (paramArrayOfInt1[(paramInt2 + 3)] << paramInt1 | paramArrayOfInt1[(paramInt2 + 0)] >>> 32 - paramInt1);
    paramArrayOfInt1[(paramInt2 + 0)] = paramArrayOfInt2[(paramInt3 + 0)];
    paramArrayOfInt1[(paramInt2 + 1)] = paramArrayOfInt2[(paramInt3 + 1)];
    paramArrayOfInt1[(paramInt2 + 2)] = paramArrayOfInt2[(paramInt3 + 2)];
    paramArrayOfInt1[(paramInt2 + 3)] = paramArrayOfInt2[(paramInt3 + 3)];
  }

  private static void roldqo32(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    paramArrayOfInt2[(paramInt3 + 0)] = (paramArrayOfInt1[(paramInt2 + 1)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 2)] >>> 64 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 1)] = (paramArrayOfInt1[(paramInt2 + 2)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 3)] >>> 64 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 2)] = (paramArrayOfInt1[(paramInt2 + 3)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 0)] >>> 64 - paramInt1);
    paramArrayOfInt2[(paramInt3 + 3)] = (paramArrayOfInt1[(paramInt2 + 0)] << paramInt1 - 32 | paramArrayOfInt1[(paramInt2 + 1)] >>> 64 - paramInt1);
    paramArrayOfInt1[(paramInt2 + 0)] = paramArrayOfInt2[(paramInt3 + 0)];
    paramArrayOfInt1[(paramInt2 + 1)] = paramArrayOfInt2[(paramInt3 + 1)];
    paramArrayOfInt1[(paramInt2 + 2)] = paramArrayOfInt2[(paramInt3 + 2)];
    paramArrayOfInt1[(paramInt2 + 3)] = paramArrayOfInt2[(paramInt3 + 3)];
  }

  private void setKey(boolean paramBoolean, byte[] paramArrayOfByte)
  {
    int[] arrayOfInt1 = new int[8];
    int[] arrayOfInt2 = new int[4];
    int[] arrayOfInt3 = new int[4];
    int[] arrayOfInt4 = new int[4];
    int i;
    switch (paramArrayOfByte.length)
    {
    default:
      throw new IllegalArgumentException("key sizes are only 16/24/32 bytes.");
    case 16:
      this._keyIs128 = true;
      arrayOfInt1[0] = bytes2int(paramArrayOfByte, 0);
      arrayOfInt1[1] = bytes2int(paramArrayOfByte, 4);
      arrayOfInt1[2] = bytes2int(paramArrayOfByte, 8);
      arrayOfInt1[3] = bytes2int(paramArrayOfByte, 12);
      arrayOfInt1[7] = 0;
      arrayOfInt1[6] = 0;
      arrayOfInt1[5] = 0;
      arrayOfInt1[4] = 0;
      i = 0;
      label131: if (i >= 4)
        camelliaF2(arrayOfInt2, SIGMA, 0);
      break;
    case 24:
    case 32:
    }
    for (int j = 0; ; j++)
    {
      if (j >= 4)
      {
        camelliaF2(arrayOfInt2, SIGMA, 4);
        if (!this._keyIs128)
          break label943;
        if (!paramBoolean)
          break label665;
        this.kw[0] = arrayOfInt1[0];
        this.kw[1] = arrayOfInt1[1];
        this.kw[2] = arrayOfInt1[2];
        this.kw[3] = arrayOfInt1[3];
        roldq(15, arrayOfInt1, 0, this.subkey, 4);
        roldq(30, arrayOfInt1, 0, this.subkey, 12);
        roldq(15, arrayOfInt1, 0, arrayOfInt4, 0);
        this.subkey[18] = arrayOfInt4[2];
        this.subkey[19] = arrayOfInt4[3];
        roldq(17, arrayOfInt1, 0, this.ke, 4);
        roldq(17, arrayOfInt1, 0, this.subkey, 24);
        roldq(17, arrayOfInt1, 0, this.subkey, 32);
        this.subkey[0] = arrayOfInt2[0];
        this.subkey[1] = arrayOfInt2[1];
        this.subkey[2] = arrayOfInt2[2];
        this.subkey[3] = arrayOfInt2[3];
        roldq(15, arrayOfInt2, 0, this.subkey, 8);
        roldq(15, arrayOfInt2, 0, this.ke, 0);
        roldq(15, arrayOfInt2, 0, arrayOfInt4, 0);
        this.subkey[16] = arrayOfInt4[0];
        this.subkey[17] = arrayOfInt4[1];
        roldq(15, arrayOfInt2, 0, this.subkey, 20);
        roldqo32(34, arrayOfInt2, 0, this.subkey, 28);
        roldq(17, arrayOfInt2, 0, this.kw, 4);
        return;
        arrayOfInt1[0] = bytes2int(paramArrayOfByte, 0);
        arrayOfInt1[1] = bytes2int(paramArrayOfByte, 4);
        arrayOfInt1[2] = bytes2int(paramArrayOfByte, 8);
        arrayOfInt1[3] = bytes2int(paramArrayOfByte, 12);
        arrayOfInt1[4] = bytes2int(paramArrayOfByte, 16);
        arrayOfInt1[5] = bytes2int(paramArrayOfByte, 20);
        arrayOfInt1[6] = (0xFFFFFFFF ^ arrayOfInt1[4]);
        arrayOfInt1[7] = (0xFFFFFFFF ^ arrayOfInt1[5]);
        this._keyIs128 = false;
        break;
        arrayOfInt1[0] = bytes2int(paramArrayOfByte, 0);
        arrayOfInt1[1] = bytes2int(paramArrayOfByte, 4);
        arrayOfInt1[2] = bytes2int(paramArrayOfByte, 8);
        arrayOfInt1[3] = bytes2int(paramArrayOfByte, 12);
        arrayOfInt1[4] = bytes2int(paramArrayOfByte, 16);
        arrayOfInt1[5] = bytes2int(paramArrayOfByte, 20);
        arrayOfInt1[6] = bytes2int(paramArrayOfByte, 24);
        arrayOfInt1[7] = bytes2int(paramArrayOfByte, 28);
        this._keyIs128 = false;
        break;
        arrayOfInt1[i] ^= arrayOfInt1[(i + 4)];
        i++;
        break label131;
      }
      arrayOfInt2[j] ^= arrayOfInt1[j];
    }
    label665: this.kw[4] = arrayOfInt1[0];
    this.kw[5] = arrayOfInt1[1];
    this.kw[6] = arrayOfInt1[2];
    this.kw[7] = arrayOfInt1[3];
    decroldq(15, arrayOfInt1, 0, this.subkey, 28);
    decroldq(30, arrayOfInt1, 0, this.subkey, 20);
    decroldq(15, arrayOfInt1, 0, arrayOfInt4, 0);
    this.subkey[16] = arrayOfInt4[0];
    this.subkey[17] = arrayOfInt4[1];
    decroldq(17, arrayOfInt1, 0, this.ke, 0);
    decroldq(17, arrayOfInt1, 0, this.subkey, 8);
    decroldq(17, arrayOfInt1, 0, this.subkey, 0);
    this.subkey[34] = arrayOfInt2[0];
    this.subkey[35] = arrayOfInt2[1];
    this.subkey[32] = arrayOfInt2[2];
    this.subkey[33] = arrayOfInt2[3];
    decroldq(15, arrayOfInt2, 0, this.subkey, 24);
    decroldq(15, arrayOfInt2, 0, this.ke, 4);
    decroldq(15, arrayOfInt2, 0, arrayOfInt4, 0);
    this.subkey[18] = arrayOfInt4[2];
    this.subkey[19] = arrayOfInt4[3];
    decroldq(15, arrayOfInt2, 0, this.subkey, 12);
    decroldqo32(34, arrayOfInt2, 0, this.subkey, 4);
    roldq(17, arrayOfInt2, 0, this.kw, 0);
    return;
    label943: for (int k = 0; ; k++)
    {
      if (k >= 4)
      {
        camelliaF2(arrayOfInt3, SIGMA, 8);
        if (!paramBoolean)
          break;
        this.kw[0] = arrayOfInt1[0];
        this.kw[1] = arrayOfInt1[1];
        this.kw[2] = arrayOfInt1[2];
        this.kw[3] = arrayOfInt1[3];
        roldqo32(45, arrayOfInt1, 0, this.subkey, 16);
        roldq(15, arrayOfInt1, 0, this.ke, 4);
        roldq(17, arrayOfInt1, 0, this.subkey, 32);
        roldqo32(34, arrayOfInt1, 0, this.subkey, 44);
        roldq(15, arrayOfInt1, 4, this.subkey, 4);
        roldq(15, arrayOfInt1, 4, this.ke, 0);
        roldq(30, arrayOfInt1, 4, this.subkey, 24);
        roldqo32(34, arrayOfInt1, 4, this.subkey, 36);
        roldq(15, arrayOfInt2, 0, this.subkey, 8);
        roldq(30, arrayOfInt2, 0, this.subkey, 20);
        this.ke[8] = arrayOfInt2[1];
        this.ke[9] = arrayOfInt2[2];
        this.ke[10] = arrayOfInt2[3];
        this.ke[11] = arrayOfInt2[0];
        roldqo32(49, arrayOfInt2, 0, this.subkey, 40);
        this.subkey[0] = arrayOfInt3[0];
        this.subkey[1] = arrayOfInt3[1];
        this.subkey[2] = arrayOfInt3[2];
        this.subkey[3] = arrayOfInt3[3];
        roldq(30, arrayOfInt3, 0, this.subkey, 12);
        roldq(30, arrayOfInt3, 0, this.subkey, 28);
        roldqo32(51, arrayOfInt3, 0, this.kw, 4);
        return;
      }
      arrayOfInt2[k] ^= arrayOfInt1[(k + 4)];
    }
    this.kw[4] = arrayOfInt1[0];
    this.kw[5] = arrayOfInt1[1];
    this.kw[6] = arrayOfInt1[2];
    this.kw[7] = arrayOfInt1[3];
    decroldqo32(45, arrayOfInt1, 0, this.subkey, 28);
    decroldq(15, arrayOfInt1, 0, this.ke, 4);
    decroldq(17, arrayOfInt1, 0, this.subkey, 12);
    decroldqo32(34, arrayOfInt1, 0, this.subkey, 0);
    decroldq(15, arrayOfInt1, 4, this.subkey, 40);
    decroldq(15, arrayOfInt1, 4, this.ke, 8);
    decroldq(30, arrayOfInt1, 4, this.subkey, 20);
    decroldqo32(34, arrayOfInt1, 4, this.subkey, 8);
    decroldq(15, arrayOfInt2, 0, this.subkey, 36);
    decroldq(30, arrayOfInt2, 0, this.subkey, 24);
    this.ke[2] = arrayOfInt2[1];
    this.ke[3] = arrayOfInt2[2];
    this.ke[0] = arrayOfInt2[3];
    this.ke[1] = arrayOfInt2[0];
    decroldqo32(49, arrayOfInt2, 0, this.subkey, 4);
    this.subkey[46] = arrayOfInt3[0];
    this.subkey[47] = arrayOfInt3[1];
    this.subkey[44] = arrayOfInt3[2];
    this.subkey[45] = arrayOfInt3[3];
    decroldq(30, arrayOfInt3, 0, this.subkey, 32);
    decroldq(30, arrayOfInt3, 0, this.subkey, 16);
    roldqo32(51, arrayOfInt3, 0, this.kw, 0);
  }

  public String getAlgorithmName()
  {
    return "Camellia";
  }

  public int getBlockSize()
  {
    return 16;
  }

  public void init(boolean paramBoolean, CipherParameters paramCipherParameters)
    throws IllegalArgumentException
  {
    if (!(paramCipherParameters instanceof KeyParameter))
      throw new IllegalArgumentException("only simple KeyParameter expected.");
    setKey(paramBoolean, ((KeyParameter)paramCipherParameters).getKey());
    this.initialised = true;
  }

  public int processBlock(byte[] paramArrayOfByte1, int paramInt1, byte[] paramArrayOfByte2, int paramInt2)
    throws DataLengthException, IllegalStateException
  {
    if (!this.initialised)
      throw new IllegalStateException("Camellia engine not initialised");
    if (paramInt1 + 16 > paramArrayOfByte1.length)
      throw new DataLengthException("input buffer too short");
    if (paramInt2 + 16 > paramArrayOfByte2.length)
      throw new DataLengthException("output buffer too short");
    if (this._keyIs128)
      return processBlock128(paramArrayOfByte1, paramInt1, paramArrayOfByte2, paramInt2);
    return processBlock192or256(paramArrayOfByte1, paramInt1, paramArrayOfByte2, paramInt2);
  }

  public void reset()
  {
  }
}