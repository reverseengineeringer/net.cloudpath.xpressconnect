package org.bouncycastle2.crypto.engines;

import java.lang.reflect.Array;
import org.bouncycastle2.crypto.BlockCipher;
import org.bouncycastle2.crypto.CipherParameters;
import org.bouncycastle2.crypto.DataLengthException;
import org.bouncycastle2.crypto.params.KeyParameter;

public class AESEngine
  implements BlockCipher
{
  private static final int BLOCK_SIZE = 16;
  private static final byte[] S;
  private static final byte[] Si;
  private static final int[] T0;
  private static final int[] Tinv0 = arrayOfInt2;
  private static final int m1 = -2139062144;
  private static final int m2 = 2139062143;
  private static final int m3 = 27;
  private static final int[] rcon;
  private int C0;
  private int C1;
  private int C2;
  private int C3;
  private int ROUNDS;
  private int[][] WorkingKey = null;
  private boolean forEncryption;

  static
  {
    byte[] arrayOfByte1 = new byte[256];
    arrayOfByte1[0] = 99;
    arrayOfByte1[1] = 124;
    arrayOfByte1[2] = 119;
    arrayOfByte1[3] = 123;
    arrayOfByte1[4] = -14;
    arrayOfByte1[5] = 107;
    arrayOfByte1[6] = 111;
    arrayOfByte1[7] = -59;
    arrayOfByte1[8] = 48;
    arrayOfByte1[9] = 1;
    arrayOfByte1[10] = 103;
    arrayOfByte1[11] = 43;
    arrayOfByte1[12] = -2;
    arrayOfByte1[13] = -41;
    arrayOfByte1[14] = -85;
    arrayOfByte1[15] = 118;
    arrayOfByte1[16] = -54;
    arrayOfByte1[17] = -126;
    arrayOfByte1[18] = -55;
    arrayOfByte1[19] = 125;
    arrayOfByte1[20] = -6;
    arrayOfByte1[21] = 89;
    arrayOfByte1[22] = 71;
    arrayOfByte1[23] = -16;
    arrayOfByte1[24] = -83;
    arrayOfByte1[25] = -44;
    arrayOfByte1[26] = -94;
    arrayOfByte1[27] = -81;
    arrayOfByte1[28] = -100;
    arrayOfByte1[29] = -92;
    arrayOfByte1[30] = 114;
    arrayOfByte1[31] = -64;
    arrayOfByte1[32] = -73;
    arrayOfByte1[33] = -3;
    arrayOfByte1[34] = -109;
    arrayOfByte1[35] = 38;
    arrayOfByte1[36] = 54;
    arrayOfByte1[37] = 63;
    arrayOfByte1[38] = -9;
    arrayOfByte1[39] = -52;
    arrayOfByte1[40] = 52;
    arrayOfByte1[41] = -91;
    arrayOfByte1[42] = -27;
    arrayOfByte1[43] = -15;
    arrayOfByte1[44] = 113;
    arrayOfByte1[45] = -40;
    arrayOfByte1[46] = 49;
    arrayOfByte1[47] = 21;
    arrayOfByte1[48] = 4;
    arrayOfByte1[49] = -57;
    arrayOfByte1[50] = 35;
    arrayOfByte1[51] = -61;
    arrayOfByte1[52] = 24;
    arrayOfByte1[53] = -106;
    arrayOfByte1[54] = 5;
    arrayOfByte1[55] = -102;
    arrayOfByte1[56] = 7;
    arrayOfByte1[57] = 18;
    arrayOfByte1[58] = -128;
    arrayOfByte1[59] = -30;
    arrayOfByte1[60] = -21;
    arrayOfByte1[61] = 39;
    arrayOfByte1[62] = -78;
    arrayOfByte1[63] = 117;
    arrayOfByte1[64] = 9;
    arrayOfByte1[65] = -125;
    arrayOfByte1[66] = 44;
    arrayOfByte1[67] = 26;
    arrayOfByte1[68] = 27;
    arrayOfByte1[69] = 110;
    arrayOfByte1[70] = 90;
    arrayOfByte1[71] = -96;
    arrayOfByte1[72] = 82;
    arrayOfByte1[73] = 59;
    arrayOfByte1[74] = -42;
    arrayOfByte1[75] = -77;
    arrayOfByte1[76] = 41;
    arrayOfByte1[77] = -29;
    arrayOfByte1[78] = 47;
    arrayOfByte1[79] = -124;
    arrayOfByte1[80] = 83;
    arrayOfByte1[81] = -47;
    arrayOfByte1[83] = -19;
    arrayOfByte1[84] = 32;
    arrayOfByte1[85] = -4;
    arrayOfByte1[86] = -79;
    arrayOfByte1[87] = 91;
    arrayOfByte1[88] = 106;
    arrayOfByte1[89] = -53;
    arrayOfByte1[90] = -66;
    arrayOfByte1[91] = 57;
    arrayOfByte1[92] = 74;
    arrayOfByte1[93] = 76;
    arrayOfByte1[94] = 88;
    arrayOfByte1[95] = -49;
    arrayOfByte1[96] = -48;
    arrayOfByte1[97] = -17;
    arrayOfByte1[98] = -86;
    arrayOfByte1[99] = -5;
    arrayOfByte1[100] = 67;
    arrayOfByte1[101] = 77;
    arrayOfByte1[102] = 51;
    arrayOfByte1[103] = -123;
    arrayOfByte1[104] = 69;
    arrayOfByte1[105] = -7;
    arrayOfByte1[106] = 2;
    arrayOfByte1[107] = 127;
    arrayOfByte1[108] = 80;
    arrayOfByte1[109] = 60;
    arrayOfByte1[110] = -97;
    arrayOfByte1[111] = -88;
    arrayOfByte1[112] = 81;
    arrayOfByte1[113] = -93;
    arrayOfByte1[114] = 64;
    arrayOfByte1[115] = -113;
    arrayOfByte1[116] = -110;
    arrayOfByte1[117] = -99;
    arrayOfByte1[118] = 56;
    arrayOfByte1[119] = -11;
    arrayOfByte1[120] = -68;
    arrayOfByte1[121] = -74;
    arrayOfByte1[122] = -38;
    arrayOfByte1[123] = 33;
    arrayOfByte1[124] = 16;
    arrayOfByte1[125] = -1;
    arrayOfByte1[126] = -13;
    arrayOfByte1[127] = -46;
    arrayOfByte1[''] = -51;
    arrayOfByte1[''] = 12;
    arrayOfByte1[''] = 19;
    arrayOfByte1[''] = -20;
    arrayOfByte1[''] = 95;
    arrayOfByte1[''] = -105;
    arrayOfByte1[''] = 68;
    arrayOfByte1[''] = 23;
    arrayOfByte1[''] = -60;
    arrayOfByte1[''] = -89;
    arrayOfByte1[''] = 126;
    arrayOfByte1[''] = 61;
    arrayOfByte1[''] = 100;
    arrayOfByte1[''] = 93;
    arrayOfByte1[''] = 25;
    arrayOfByte1[''] = 115;
    arrayOfByte1[''] = 96;
    arrayOfByte1[''] = -127;
    arrayOfByte1[''] = 79;
    arrayOfByte1[''] = -36;
    arrayOfByte1[''] = 34;
    arrayOfByte1[''] = 42;
    arrayOfByte1[''] = -112;
    arrayOfByte1[''] = -120;
    arrayOfByte1[''] = 70;
    arrayOfByte1[''] = -18;
    arrayOfByte1[''] = -72;
    arrayOfByte1[''] = 20;
    arrayOfByte1[''] = -34;
    arrayOfByte1[''] = 94;
    arrayOfByte1[''] = 11;
    arrayOfByte1[''] = -37;
    arrayOfByte1[' '] = -32;
    arrayOfByte1['¡'] = 50;
    arrayOfByte1['¢'] = 58;
    arrayOfByte1['£'] = 10;
    arrayOfByte1['¤'] = 73;
    arrayOfByte1['¥'] = 6;
    arrayOfByte1['¦'] = 36;
    arrayOfByte1['§'] = 92;
    arrayOfByte1['¨'] = -62;
    arrayOfByte1['©'] = -45;
    arrayOfByte1['ª'] = -84;
    arrayOfByte1['«'] = 98;
    arrayOfByte1['¬'] = -111;
    arrayOfByte1['­'] = -107;
    arrayOfByte1['®'] = -28;
    arrayOfByte1['¯'] = 121;
    arrayOfByte1['°'] = -25;
    arrayOfByte1['±'] = -56;
    arrayOfByte1['²'] = 55;
    arrayOfByte1['³'] = 109;
    arrayOfByte1['´'] = -115;
    arrayOfByte1['µ'] = -43;
    arrayOfByte1['¶'] = 78;
    arrayOfByte1['·'] = -87;
    arrayOfByte1['¸'] = 108;
    arrayOfByte1['¹'] = 86;
    arrayOfByte1['º'] = -12;
    arrayOfByte1['»'] = -22;
    arrayOfByte1['¼'] = 101;
    arrayOfByte1['½'] = 122;
    arrayOfByte1['¾'] = -82;
    arrayOfByte1['¿'] = 8;
    arrayOfByte1['À'] = -70;
    arrayOfByte1['Á'] = 120;
    arrayOfByte1['Â'] = 37;
    arrayOfByte1['Ã'] = 46;
    arrayOfByte1['Ä'] = 28;
    arrayOfByte1['Å'] = -90;
    arrayOfByte1['Æ'] = -76;
    arrayOfByte1['Ç'] = -58;
    arrayOfByte1['È'] = -24;
    arrayOfByte1['É'] = -35;
    arrayOfByte1['Ê'] = 116;
    arrayOfByte1['Ë'] = 31;
    arrayOfByte1['Ì'] = 75;
    arrayOfByte1['Í'] = -67;
    arrayOfByte1['Î'] = -117;
    arrayOfByte1['Ï'] = -118;
    arrayOfByte1['Ð'] = 112;
    arrayOfByte1['Ñ'] = 62;
    arrayOfByte1['Ò'] = -75;
    arrayOfByte1['Ó'] = 102;
    arrayOfByte1['Ô'] = 72;
    arrayOfByte1['Õ'] = 3;
    arrayOfByte1['Ö'] = -10;
    arrayOfByte1['×'] = 14;
    arrayOfByte1['Ø'] = 97;
    arrayOfByte1['Ù'] = 53;
    arrayOfByte1['Ú'] = 87;
    arrayOfByte1['Û'] = -71;
    arrayOfByte1['Ü'] = -122;
    arrayOfByte1['Ý'] = -63;
    arrayOfByte1['Þ'] = 29;
    arrayOfByte1['ß'] = -98;
    arrayOfByte1['à'] = -31;
    arrayOfByte1['á'] = -8;
    arrayOfByte1['â'] = -104;
    arrayOfByte1['ã'] = 17;
    arrayOfByte1['ä'] = 105;
    arrayOfByte1['å'] = -39;
    arrayOfByte1['æ'] = -114;
    arrayOfByte1['ç'] = -108;
    arrayOfByte1['è'] = -101;
    arrayOfByte1['é'] = 30;
    arrayOfByte1['ê'] = -121;
    arrayOfByte1['ë'] = -23;
    arrayOfByte1['ì'] = -50;
    arrayOfByte1['í'] = 85;
    arrayOfByte1['î'] = 40;
    arrayOfByte1['ï'] = -33;
    arrayOfByte1['ð'] = -116;
    arrayOfByte1['ñ'] = -95;
    arrayOfByte1['ò'] = -119;
    arrayOfByte1['ó'] = 13;
    arrayOfByte1['ô'] = -65;
    arrayOfByte1['õ'] = -26;
    arrayOfByte1['ö'] = 66;
    arrayOfByte1['÷'] = 104;
    arrayOfByte1['ø'] = 65;
    arrayOfByte1['ù'] = -103;
    arrayOfByte1['ú'] = 45;
    arrayOfByte1['û'] = 15;
    arrayOfByte1['ü'] = -80;
    arrayOfByte1['ý'] = 84;
    arrayOfByte1['þ'] = -69;
    arrayOfByte1['ÿ'] = 22;
    S = arrayOfByte1;
    byte[] arrayOfByte2 = new byte[256];
    arrayOfByte2[0] = 82;
    arrayOfByte2[1] = 9;
    arrayOfByte2[2] = 106;
    arrayOfByte2[3] = -43;
    arrayOfByte2[4] = 48;
    arrayOfByte2[5] = 54;
    arrayOfByte2[6] = -91;
    arrayOfByte2[7] = 56;
    arrayOfByte2[8] = -65;
    arrayOfByte2[9] = 64;
    arrayOfByte2[10] = -93;
    arrayOfByte2[11] = -98;
    arrayOfByte2[12] = -127;
    arrayOfByte2[13] = -13;
    arrayOfByte2[14] = -41;
    arrayOfByte2[15] = -5;
    arrayOfByte2[16] = 124;
    arrayOfByte2[17] = -29;
    arrayOfByte2[18] = 57;
    arrayOfByte2[19] = -126;
    arrayOfByte2[20] = -101;
    arrayOfByte2[21] = 47;
    arrayOfByte2[22] = -1;
    arrayOfByte2[23] = -121;
    arrayOfByte2[24] = 52;
    arrayOfByte2[25] = -114;
    arrayOfByte2[26] = 67;
    arrayOfByte2[27] = 68;
    arrayOfByte2[28] = -60;
    arrayOfByte2[29] = -34;
    arrayOfByte2[30] = -23;
    arrayOfByte2[31] = -53;
    arrayOfByte2[32] = 84;
    arrayOfByte2[33] = 123;
    arrayOfByte2[34] = -108;
    arrayOfByte2[35] = 50;
    arrayOfByte2[36] = -90;
    arrayOfByte2[37] = -62;
    arrayOfByte2[38] = 35;
    arrayOfByte2[39] = 61;
    arrayOfByte2[40] = -18;
    arrayOfByte2[41] = 76;
    arrayOfByte2[42] = -107;
    arrayOfByte2[43] = 11;
    arrayOfByte2[44] = 66;
    arrayOfByte2[45] = -6;
    arrayOfByte2[46] = -61;
    arrayOfByte2[47] = 78;
    arrayOfByte2[48] = 8;
    arrayOfByte2[49] = 46;
    arrayOfByte2[50] = -95;
    arrayOfByte2[51] = 102;
    arrayOfByte2[52] = 40;
    arrayOfByte2[53] = -39;
    arrayOfByte2[54] = 36;
    arrayOfByte2[55] = -78;
    arrayOfByte2[56] = 118;
    arrayOfByte2[57] = 91;
    arrayOfByte2[58] = -94;
    arrayOfByte2[59] = 73;
    arrayOfByte2[60] = 109;
    arrayOfByte2[61] = -117;
    arrayOfByte2[62] = -47;
    arrayOfByte2[63] = 37;
    arrayOfByte2[64] = 114;
    arrayOfByte2[65] = -8;
    arrayOfByte2[66] = -10;
    arrayOfByte2[67] = 100;
    arrayOfByte2[68] = -122;
    arrayOfByte2[69] = 104;
    arrayOfByte2[70] = -104;
    arrayOfByte2[71] = 22;
    arrayOfByte2[72] = -44;
    arrayOfByte2[73] = -92;
    arrayOfByte2[74] = 92;
    arrayOfByte2[75] = -52;
    arrayOfByte2[76] = 93;
    arrayOfByte2[77] = 101;
    arrayOfByte2[78] = -74;
    arrayOfByte2[79] = -110;
    arrayOfByte2[80] = 108;
    arrayOfByte2[81] = 112;
    arrayOfByte2[82] = 72;
    arrayOfByte2[83] = 80;
    arrayOfByte2[84] = -3;
    arrayOfByte2[85] = -19;
    arrayOfByte2[86] = -71;
    arrayOfByte2[87] = -38;
    arrayOfByte2[88] = 94;
    arrayOfByte2[89] = 21;
    arrayOfByte2[90] = 70;
    arrayOfByte2[91] = 87;
    arrayOfByte2[92] = -89;
    arrayOfByte2[93] = -115;
    arrayOfByte2[94] = -99;
    arrayOfByte2[95] = -124;
    arrayOfByte2[96] = -112;
    arrayOfByte2[97] = -40;
    arrayOfByte2[98] = -85;
    arrayOfByte2[100] = -116;
    arrayOfByte2[101] = -68;
    arrayOfByte2[102] = -45;
    arrayOfByte2[103] = 10;
    arrayOfByte2[104] = -9;
    arrayOfByte2[105] = -28;
    arrayOfByte2[106] = 88;
    arrayOfByte2[107] = 5;
    arrayOfByte2[108] = -72;
    arrayOfByte2[109] = -77;
    arrayOfByte2[110] = 69;
    arrayOfByte2[111] = 6;
    arrayOfByte2[112] = -48;
    arrayOfByte2[113] = 44;
    arrayOfByte2[114] = 30;
    arrayOfByte2[115] = -113;
    arrayOfByte2[116] = -54;
    arrayOfByte2[117] = 63;
    arrayOfByte2[118] = 15;
    arrayOfByte2[119] = 2;
    arrayOfByte2[120] = -63;
    arrayOfByte2[121] = -81;
    arrayOfByte2[122] = -67;
    arrayOfByte2[123] = 3;
    arrayOfByte2[124] = 1;
    arrayOfByte2[125] = 19;
    arrayOfByte2[126] = -118;
    arrayOfByte2[127] = 107;
    arrayOfByte2[''] = 58;
    arrayOfByte2[''] = -111;
    arrayOfByte2[''] = 17;
    arrayOfByte2[''] = 65;
    arrayOfByte2[''] = 79;
    arrayOfByte2[''] = 103;
    arrayOfByte2[''] = -36;
    arrayOfByte2[''] = -22;
    arrayOfByte2[''] = -105;
    arrayOfByte2[''] = -14;
    arrayOfByte2[''] = -49;
    arrayOfByte2[''] = -50;
    arrayOfByte2[''] = -16;
    arrayOfByte2[''] = -76;
    arrayOfByte2[''] = -26;
    arrayOfByte2[''] = 115;
    arrayOfByte2[''] = -106;
    arrayOfByte2[''] = -84;
    arrayOfByte2[''] = 116;
    arrayOfByte2[''] = 34;
    arrayOfByte2[''] = -25;
    arrayOfByte2[''] = -83;
    arrayOfByte2[''] = 53;
    arrayOfByte2[''] = -123;
    arrayOfByte2[''] = -30;
    arrayOfByte2[''] = -7;
    arrayOfByte2[''] = 55;
    arrayOfByte2[''] = -24;
    arrayOfByte2[''] = 28;
    arrayOfByte2[''] = 117;
    arrayOfByte2[''] = -33;
    arrayOfByte2[''] = 110;
    arrayOfByte2[' '] = 71;
    arrayOfByte2['¡'] = -15;
    arrayOfByte2['¢'] = 26;
    arrayOfByte2['£'] = 113;
    arrayOfByte2['¤'] = 29;
    arrayOfByte2['¥'] = 41;
    arrayOfByte2['¦'] = -59;
    arrayOfByte2['§'] = -119;
    arrayOfByte2['¨'] = 111;
    arrayOfByte2['©'] = -73;
    arrayOfByte2['ª'] = 98;
    arrayOfByte2['«'] = 14;
    arrayOfByte2['¬'] = -86;
    arrayOfByte2['­'] = 24;
    arrayOfByte2['®'] = -66;
    arrayOfByte2['¯'] = 27;
    arrayOfByte2['°'] = -4;
    arrayOfByte2['±'] = 86;
    arrayOfByte2['²'] = 62;
    arrayOfByte2['³'] = 75;
    arrayOfByte2['´'] = -58;
    arrayOfByte2['µ'] = -46;
    arrayOfByte2['¶'] = 121;
    arrayOfByte2['·'] = 32;
    arrayOfByte2['¸'] = -102;
    arrayOfByte2['¹'] = -37;
    arrayOfByte2['º'] = -64;
    arrayOfByte2['»'] = -2;
    arrayOfByte2['¼'] = 120;
    arrayOfByte2['½'] = -51;
    arrayOfByte2['¾'] = 90;
    arrayOfByte2['¿'] = -12;
    arrayOfByte2['À'] = 31;
    arrayOfByte2['Á'] = -35;
    arrayOfByte2['Â'] = -88;
    arrayOfByte2['Ã'] = 51;
    arrayOfByte2['Ä'] = -120;
    arrayOfByte2['Å'] = 7;
    arrayOfByte2['Æ'] = -57;
    arrayOfByte2['Ç'] = 49;
    arrayOfByte2['È'] = -79;
    arrayOfByte2['É'] = 18;
    arrayOfByte2['Ê'] = 16;
    arrayOfByte2['Ë'] = 89;
    arrayOfByte2['Ì'] = 39;
    arrayOfByte2['Í'] = -128;
    arrayOfByte2['Î'] = -20;
    arrayOfByte2['Ï'] = 95;
    arrayOfByte2['Ð'] = 96;
    arrayOfByte2['Ñ'] = 81;
    arrayOfByte2['Ò'] = 127;
    arrayOfByte2['Ó'] = -87;
    arrayOfByte2['Ô'] = 25;
    arrayOfByte2['Õ'] = -75;
    arrayOfByte2['Ö'] = 74;
    arrayOfByte2['×'] = 13;
    arrayOfByte2['Ø'] = 45;
    arrayOfByte2['Ù'] = -27;
    arrayOfByte2['Ú'] = 122;
    arrayOfByte2['Û'] = -97;
    arrayOfByte2['Ü'] = -109;
    arrayOfByte2['Ý'] = -55;
    arrayOfByte2['Þ'] = -100;
    arrayOfByte2['ß'] = -17;
    arrayOfByte2['à'] = -96;
    arrayOfByte2['á'] = -32;
    arrayOfByte2['â'] = 59;
    arrayOfByte2['ã'] = 77;
    arrayOfByte2['ä'] = -82;
    arrayOfByte2['å'] = 42;
    arrayOfByte2['æ'] = -11;
    arrayOfByte2['ç'] = -80;
    arrayOfByte2['è'] = -56;
    arrayOfByte2['é'] = -21;
    arrayOfByte2['ê'] = -69;
    arrayOfByte2['ë'] = 60;
    arrayOfByte2['ì'] = -125;
    arrayOfByte2['í'] = 83;
    arrayOfByte2['î'] = -103;
    arrayOfByte2['ï'] = 97;
    arrayOfByte2['ð'] = 23;
    arrayOfByte2['ñ'] = 43;
    arrayOfByte2['ò'] = 4;
    arrayOfByte2['ó'] = 126;
    arrayOfByte2['ô'] = -70;
    arrayOfByte2['õ'] = 119;
    arrayOfByte2['ö'] = -42;
    arrayOfByte2['÷'] = 38;
    arrayOfByte2['ø'] = -31;
    arrayOfByte2['ù'] = 105;
    arrayOfByte2['ú'] = 20;
    arrayOfByte2['û'] = 99;
    arrayOfByte2['ü'] = 85;
    arrayOfByte2['ý'] = 33;
    arrayOfByte2['þ'] = 12;
    arrayOfByte2['ÿ'] = 125;
    Si = arrayOfByte2;
    rcon = new int[] { 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145 };
    int[] arrayOfInt1 = new int[256];
    arrayOfInt1[0] = -1520213050;
    arrayOfInt1[1] = -2072216328;
    arrayOfInt1[2] = -1720223762;
    arrayOfInt1[3] = -1921287178;
    arrayOfInt1[4] = 234025727;
    arrayOfInt1[5] = -1117033514;
    arrayOfInt1[6] = -1318096930;
    arrayOfInt1[7] = 1422247313;
    arrayOfInt1[8] = 1345335392;
    arrayOfInt1[9] = 50397442;
    arrayOfInt1[10] = -1452841010;
    arrayOfInt1[11] = 2099981142;
    arrayOfInt1[12] = 436141799;
    arrayOfInt1[13] = 1658312629;
    arrayOfInt1[14] = -424957107;
    arrayOfInt1[15] = -1703512340;
    arrayOfInt1[16] = 1170918031;
    arrayOfInt1[17] = -1652391393;
    arrayOfInt1[18] = 1086966153;
    arrayOfInt1[19] = -2021818886;
    arrayOfInt1[20] = 368769775;
    arrayOfInt1[21] = -346465870;
    arrayOfInt1[22] = -918075506;
    arrayOfInt1[23] = 200339707;
    arrayOfInt1[24] = -324162239;
    arrayOfInt1[25] = 1742001331;
    arrayOfInt1[26] = -39673249;
    arrayOfInt1[27] = -357585083;
    arrayOfInt1[28] = -1080255453;
    arrayOfInt1[29] = -140204973;
    arrayOfInt1[30] = -1770884380;
    arrayOfInt1[31] = 1539358875;
    arrayOfInt1[32] = -1028147339;
    arrayOfInt1[33] = 486407649;
    arrayOfInt1[34] = -1366060227;
    arrayOfInt1[35] = 1780885068;
    arrayOfInt1[36] = 1513502316;
    arrayOfInt1[37] = 1094664062;
    arrayOfInt1[38] = 49805301;
    arrayOfInt1[39] = 1338821763;
    arrayOfInt1[40] = 1546925160;
    arrayOfInt1[41] = -190470831;
    arrayOfInt1[42] = 887481809;
    arrayOfInt1[43] = 150073849;
    arrayOfInt1[44] = -1821281822;
    arrayOfInt1[45] = 1943591083;
    arrayOfInt1[46] = 1395732834;
    arrayOfInt1[47] = 1058346282;
    arrayOfInt1[48] = 201589768;
    arrayOfInt1[49] = 1388824469;
    arrayOfInt1[50] = 1696801606;
    arrayOfInt1[51] = 1589887901;
    arrayOfInt1[52] = 672667696;
    arrayOfInt1[53] = -1583966665;
    arrayOfInt1[54] = 251987210;
    arrayOfInt1[55] = -1248159185;
    arrayOfInt1[56] = 151455502;
    arrayOfInt1[57] = 907153956;
    arrayOfInt1[58] = -1686077413;
    arrayOfInt1[59] = 1038279391;
    arrayOfInt1[60] = 652995533;
    arrayOfInt1[61] = 1764173646;
    arrayOfInt1[62] = -843926913;
    arrayOfInt1[63] = -1619692054;
    arrayOfInt1[64] = 453576978;
    arrayOfInt1[65] = -1635548387;
    arrayOfInt1[66] = 1949051992;
    arrayOfInt1[67] = 773462580;
    arrayOfInt1[68] = 756751158;
    arrayOfInt1[69] = -1301385508;
    arrayOfInt1[70] = -296068428;
    arrayOfInt1[71] = -73359269;
    arrayOfInt1[72] = -162377052;
    arrayOfInt1[73] = 1295727478;
    arrayOfInt1[74] = 1641469623;
    arrayOfInt1[75] = -827083907;
    arrayOfInt1[76] = 2066295122;
    arrayOfInt1[77] = 1055122397;
    arrayOfInt1[78] = 1898917726;
    arrayOfInt1[79] = -1752923117;
    arrayOfInt1[80] = -179088474;
    arrayOfInt1[81] = 1758581177;
    arrayOfInt1[83] = 753790401;
    arrayOfInt1[84] = 1612718144;
    arrayOfInt1[85] = 536673507;
    arrayOfInt1[86] = -927878791;
    arrayOfInt1[87] = -312779850;
    arrayOfInt1[88] = -1100322092;
    arrayOfInt1[89] = 1187761037;
    arrayOfInt1[90] = -641810841;
    arrayOfInt1[91] = 1262041458;
    arrayOfInt1[92] = -565556588;
    arrayOfInt1[93] = -733197160;
    arrayOfInt1[94] = -396863312;
    arrayOfInt1[95] = 1255133061;
    arrayOfInt1[96] = 1808847035;
    arrayOfInt1[97] = 720367557;
    arrayOfInt1[98] = -441800113;
    arrayOfInt1[99] = 385612781;
    arrayOfInt1[100] = -985447546;
    arrayOfInt1[101] = -682799718;
    arrayOfInt1[102] = 1429418854;
    arrayOfInt1[103] = -1803188975;
    arrayOfInt1[104] = -817543798;
    arrayOfInt1[105] = 284817897;
    arrayOfInt1[106] = 100794884;
    arrayOfInt1[107] = -2122350594;
    arrayOfInt1[108] = -263171936;
    arrayOfInt1[109] = 1144798328;
    arrayOfInt1[110] = -1163944155;
    arrayOfInt1[111] = -475486133;
    arrayOfInt1[112] = -212774494;
    arrayOfInt1[113] = -22830243;
    arrayOfInt1[114] = -1069531008;
    arrayOfInt1[115] = -1970303227;
    arrayOfInt1[116] = -1382903233;
    arrayOfInt1[117] = -1130521311;
    arrayOfInt1[118] = 1211644016;
    arrayOfInt1[119] = 83228145;
    arrayOfInt1[120] = -541279133;
    arrayOfInt1[121] = -1044990345;
    arrayOfInt1[122] = 1977277103;
    arrayOfInt1[123] = 1663115586;
    arrayOfInt1[124] = 806359072;
    arrayOfInt1[125] = 452984805;
    arrayOfInt1[126] = 250868733;
    arrayOfInt1[127] = 1842533055;
    arrayOfInt1[''] = 1288555905;
    arrayOfInt1[''] = 336333848;
    arrayOfInt1[''] = 890442534;
    arrayOfInt1[''] = 804056259;
    arrayOfInt1[''] = -513843266;
    arrayOfInt1[''] = -1567123659;
    arrayOfInt1[''] = -867941240;
    arrayOfInt1[''] = 957814574;
    arrayOfInt1[''] = 1472513171;
    arrayOfInt1[''] = -223893675;
    arrayOfInt1[''] = -2105639172;
    arrayOfInt1[''] = 1195195770;
    arrayOfInt1[''] = -1402706744;
    arrayOfInt1[''] = -413311558;
    arrayOfInt1[''] = 723065138;
    arrayOfInt1[''] = -1787595802;
    arrayOfInt1[''] = -1604296512;
    arrayOfInt1[''] = -1736343271;
    arrayOfInt1[''] = -783331426;
    arrayOfInt1[''] = 2145180835;
    arrayOfInt1[''] = 1713513028;
    arrayOfInt1[''] = 2116692564;
    arrayOfInt1[''] = -1416589253;
    arrayOfInt1[''] = -2088204277;
    arrayOfInt1[''] = -901364084;
    arrayOfInt1[''] = 703524551;
    arrayOfInt1[''] = -742868885;
    arrayOfInt1[''] = 1007948840;
    arrayOfInt1[''] = 2044649127;
    arrayOfInt1[''] = -497131844;
    arrayOfInt1[''] = 487262998;
    arrayOfInt1[''] = 1994120109;
    arrayOfInt1[' '] = 1004593371;
    arrayOfInt1['¡'] = 1446130276;
    arrayOfInt1['¢'] = 1312438900;
    arrayOfInt1['£'] = 503974420;
    arrayOfInt1['¤'] = -615954030;
    arrayOfInt1['¥'] = 168166924;
    arrayOfInt1['¦'] = 1814307912;
    arrayOfInt1['§'] = -463709000;
    arrayOfInt1['¨'] = 1573044895;
    arrayOfInt1['©'] = 1859376061;
    arrayOfInt1['ª'] = -273896381;
    arrayOfInt1['«'] = -1503501628;
    arrayOfInt1['¬'] = -1466855111;
    arrayOfInt1['­'] = -1533700815;
    arrayOfInt1['®'] = 937747667;
    arrayOfInt1['¯'] = -1954973198;
    arrayOfInt1['°'] = 854058965;
    arrayOfInt1['±'] = 1137232011;
    arrayOfInt1['²'] = 1496790894;
    arrayOfInt1['³'] = -1217565222;
    arrayOfInt1['´'] = -1936880383;
    arrayOfInt1['µ'] = 1691735473;
    arrayOfInt1['¶'] = -766620004;
    arrayOfInt1['·'] = -525751991;
    arrayOfInt1['¸'] = -1267962664;
    arrayOfInt1['¹'] = -95005012;
    arrayOfInt1['º'] = 133494003;
    arrayOfInt1['»'] = 636152527;
    arrayOfInt1['¼'] = -1352309302;
    arrayOfInt1['½'] = -1904575756;
    arrayOfInt1['¾'] = -374428089;
    arrayOfInt1['¿'] = 403179536;
    arrayOfInt1['À'] = -709182865;
    arrayOfInt1['Á'] = -2005370640;
    arrayOfInt1['Â'] = 1864705354;
    arrayOfInt1['Ã'] = 1915629148;
    arrayOfInt1['Ä'] = 605822008;
    arrayOfInt1['Å'] = -240736681;
    arrayOfInt1['Æ'] = -944458637;
    arrayOfInt1['Ç'] = 1371981463;
    arrayOfInt1['È'] = 602466507;
    arrayOfInt1['É'] = 2094914977;
    arrayOfInt1['Ê'] = -1670089496;
    arrayOfInt1['Ë'] = 555687742;
    arrayOfInt1['Ì'] = -582268010;
    arrayOfInt1['Í'] = -591544991;
    arrayOfInt1['Î'] = -2037675251;
    arrayOfInt1['Ï'] = -2054518257;
    arrayOfInt1['Ð'] = -1871679264;
    arrayOfInt1['Ñ'] = 1111375484;
    arrayOfInt1['Ò'] = -994724495;
    arrayOfInt1['Ó'] = -1436129588;
    arrayOfInt1['Ô'] = -666351472;
    arrayOfInt1['Õ'] = 84083462;
    arrayOfInt1['Ö'] = 32962295;
    arrayOfInt1['×'] = 302911004;
    arrayOfInt1['Ø'] = -1553899070;
    arrayOfInt1['Ù'] = 1597322602;
    arrayOfInt1['Ú'] = -111716434;
    arrayOfInt1['Û'] = -793134743;
    arrayOfInt1['Ü'] = -1853454825;
    arrayOfInt1['Ý'] = 1489093017;
    arrayOfInt1['Þ'] = 656219450;
    arrayOfInt1['ß'] = -1180787161;
    arrayOfInt1['à'] = 954327513;
    arrayOfInt1['á'] = 335083755;
    arrayOfInt1['â'] = -1281845205;
    arrayOfInt1['ã'] = 856756514;
    arrayOfInt1['ä'] = -1150719534;
    arrayOfInt1['å'] = 1893325225;
    arrayOfInt1['æ'] = -1987146233;
    arrayOfInt1['ç'] = -1483434957;
    arrayOfInt1['è'] = -1231316179;
    arrayOfInt1['é'] = 572399164;
    arrayOfInt1['ê'] = -1836611819;
    arrayOfInt1['ë'] = 552200649;
    arrayOfInt1['ì'] = 1238290055;
    arrayOfInt1['í'] = -11184726;
    arrayOfInt1['î'] = 2015897680;
    arrayOfInt1['ï'] = 2061492133;
    arrayOfInt1['ð'] = -1886614525;
    arrayOfInt1['ñ'] = -123625127;
    arrayOfInt1['ò'] = -2138470135;
    arrayOfInt1['ó'] = 386731290;
    arrayOfInt1['ô'] = -624967835;
    arrayOfInt1['õ'] = 837215959;
    arrayOfInt1['ö'] = -968736124;
    arrayOfInt1['÷'] = -1201116976;
    arrayOfInt1['ø'] = -1019133566;
    arrayOfInt1['ù'] = -1332111063;
    arrayOfInt1['ú'] = 1999449434;
    arrayOfInt1['û'] = 286199582;
    arrayOfInt1['ü'] = -877612933;
    arrayOfInt1['ý'] = -61582168;
    arrayOfInt1['þ'] = -692339859;
    arrayOfInt1['ÿ'] = 974525996;
    T0 = arrayOfInt1;
    int[] arrayOfInt2 = new int[256];
    arrayOfInt2[0] = 1353184337;
    arrayOfInt2[1] = 1399144830;
    arrayOfInt2[2] = -1012656358;
    arrayOfInt2[3] = -1772214470;
    arrayOfInt2[4] = -882136261;
    arrayOfInt2[5] = -247096033;
    arrayOfInt2[6] = -1420232020;
    arrayOfInt2[7] = -1828461749;
    arrayOfInt2[8] = 1442459680;
    arrayOfInt2[9] = -160598355;
    arrayOfInt2[10] = -1854485368;
    arrayOfInt2[11] = 625738485;
    arrayOfInt2[12] = -52959921;
    arrayOfInt2[13] = -674551099;
    arrayOfInt2[14] = -2143013594;
    arrayOfInt2[15] = -1885117771;
    arrayOfInt2[16] = 1230680542;
    arrayOfInt2[17] = 1729870373;
    arrayOfInt2[18] = -1743852987;
    arrayOfInt2[19] = -507445667;
    arrayOfInt2[20] = 41234371;
    arrayOfInt2[21] = 317738113;
    arrayOfInt2[22] = -1550367091;
    arrayOfInt2[23] = -956705941;
    arrayOfInt2[24] = -413167869;
    arrayOfInt2[25] = -1784901099;
    arrayOfInt2[26] = -344298049;
    arrayOfInt2[27] = -631680363;
    arrayOfInt2[28] = 763608788;
    arrayOfInt2[29] = -752782248;
    arrayOfInt2[30] = 694804553;
    arrayOfInt2[31] = 1154009486;
    arrayOfInt2[32] = 1787413109;
    arrayOfInt2[33] = 2021232372;
    arrayOfInt2[34] = 1799248025;
    arrayOfInt2[35] = -579749593;
    arrayOfInt2[36] = -1236278850;
    arrayOfInt2[37] = 397248752;
    arrayOfInt2[38] = 1722556617;
    arrayOfInt2[39] = -1271214467;
    arrayOfInt2[40] = 407560035;
    arrayOfInt2[41] = -2110711067;
    arrayOfInt2[42] = 1613975959;
    arrayOfInt2[43] = 1165972322;
    arrayOfInt2[44] = -529046351;
    arrayOfInt2[45] = -2068943941;
    arrayOfInt2[46] = 480281086;
    arrayOfInt2[47] = -1809118983;
    arrayOfInt2[48] = 1483229296;
    arrayOfInt2[49] = 436028815;
    arrayOfInt2[50] = -2022908268;
    arrayOfInt2[51] = -1208452270;
    arrayOfInt2[52] = 601060267;
    arrayOfInt2[53] = -503166094;
    arrayOfInt2[54] = 1468997603;
    arrayOfInt2[55] = 715871590;
    arrayOfInt2[56] = 120122290;
    arrayOfInt2[57] = 63092015;
    arrayOfInt2[58] = -1703164538;
    arrayOfInt2[59] = -1526188077;
    arrayOfInt2[60] = -226023376;
    arrayOfInt2[61] = -1297760477;
    arrayOfInt2[62] = -1167457534;
    arrayOfInt2[63] = 1552029421;
    arrayOfInt2[64] = 723308426;
    arrayOfInt2[65] = -1833666137;
    arrayOfInt2[66] = -252573709;
    arrayOfInt2[67] = -1578997426;
    arrayOfInt2[68] = -839591323;
    arrayOfInt2[69] = -708967162;
    arrayOfInt2[70] = 526529745;
    arrayOfInt2[71] = -1963022652;
    arrayOfInt2[72] = -1655493068;
    arrayOfInt2[73] = -1604979806;
    arrayOfInt2[74] = 853641733;
    arrayOfInt2[75] = 1978398372;
    arrayOfInt2[76] = 971801355;
    arrayOfInt2[77] = -1427152832;
    arrayOfInt2[78] = 111112542;
    arrayOfInt2[79] = 1360031421;
    arrayOfInt2[80] = -108388034;
    arrayOfInt2[81] = 1023860118;
    arrayOfInt2[82] = -1375387939;
    arrayOfInt2[83] = 1186850381;
    arrayOfInt2[84] = -1249028975;
    arrayOfInt2[85] = 90031217;
    arrayOfInt2[86] = 1876166148;
    arrayOfInt2[87] = -15380384;
    arrayOfInt2[88] = 620468249;
    arrayOfInt2[89] = -1746289194;
    arrayOfInt2[90] = -868007799;
    arrayOfInt2[91] = 2006899047;
    arrayOfInt2[92] = -1119688528;
    arrayOfInt2[93] = -2004121337;
    arrayOfInt2[94] = 945494503;
    arrayOfInt2[95] = -605108103;
    arrayOfInt2[96] = 1191869601;
    arrayOfInt2[97] = -384875908;
    arrayOfInt2[98] = -920746760;
    arrayOfInt2[100] = -2088337399;
    arrayOfInt2[101] = 1223502642;
    arrayOfInt2[102] = -1401941730;
    arrayOfInt2[103] = 1316117100;
    arrayOfInt2[104] = -67170563;
    arrayOfInt2[105] = 1446544655;
    arrayOfInt2[106] = 517320253;
    arrayOfInt2[107] = 658058550;
    arrayOfInt2[108] = 1691946762;
    arrayOfInt2[109] = 564550760;
    arrayOfInt2[110] = -783000677;
    arrayOfInt2[111] = 976107044;
    arrayOfInt2[112] = -1318647284;
    arrayOfInt2[113] = 266819475;
    arrayOfInt2[114] = -761860428;
    arrayOfInt2[115] = -1634624741;
    arrayOfInt2[116] = 1338359936;
    arrayOfInt2[117] = -1574904735;
    arrayOfInt2[118] = 1766553434;
    arrayOfInt2[119] = 370807324;
    arrayOfInt2[120] = 179999714;
    arrayOfInt2[121] = -450191168;
    arrayOfInt2[122] = 1138762300;
    arrayOfInt2[123] = 488053522;
    arrayOfInt2[124] = 185403662;
    arrayOfInt2[125] = -1379431438;
    arrayOfInt2[126] = -1180125651;
    arrayOfInt2[127] = -928440812;
    arrayOfInt2[''] = -2061897385;
    arrayOfInt2[''] = 1275557295;
    arrayOfInt2[''] = -1143105042;
    arrayOfInt2[''] = -44007517;
    arrayOfInt2[''] = -1624899081;
    arrayOfInt2[''] = -1124765092;
    arrayOfInt2[''] = -985962940;
    arrayOfInt2[''] = 880737115;
    arrayOfInt2[''] = 1982415755;
    arrayOfInt2[''] = -590994485;
    arrayOfInt2[''] = 1761406390;
    arrayOfInt2[''] = 1676797112;
    arrayOfInt2[''] = -891538985;
    arrayOfInt2[''] = 277177154;
    arrayOfInt2[''] = 1076008723;
    arrayOfInt2[''] = 538035844;
    arrayOfInt2[''] = 2099530373;
    arrayOfInt2[''] = -130171950;
    arrayOfInt2[''] = 288553390;
    arrayOfInt2[''] = 1839278535;
    arrayOfInt2[''] = 1261411869;
    arrayOfInt2[''] = -214912292;
    arrayOfInt2[''] = -330136051;
    arrayOfInt2[''] = -790380169;
    arrayOfInt2[''] = 1813426987;
    arrayOfInt2[''] = -1715900247;
    arrayOfInt2[''] = -95906799;
    arrayOfInt2[''] = 577038663;
    arrayOfInt2[''] = -997393240;
    arrayOfInt2[''] = 440397984;
    arrayOfInt2[''] = -668172970;
    arrayOfInt2[''] = -275762398;
    arrayOfInt2[' '] = -951170681;
    arrayOfInt2['¡'] = -1043253031;
    arrayOfInt2['¢'] = -22885748;
    arrayOfInt2['£'] = 906744984;
    arrayOfInt2['¤'] = -813566554;
    arrayOfInt2['¥'] = 685669029;
    arrayOfInt2['¦'] = 646887386;
    arrayOfInt2['§'] = -1530942145;
    arrayOfInt2['¨'] = -459458004;
    arrayOfInt2['©'] = 227702864;
    arrayOfInt2['ª'] = -1681105046;
    arrayOfInt2['«'] = 1648787028;
    arrayOfInt2['¬'] = -1038905866;
    arrayOfInt2['­'] = -390539120;
    arrayOfInt2['®'] = 1593260334;
    arrayOfInt2['¯'] = -173030526;
    arrayOfInt2['°'] = -1098883681;
    arrayOfInt2['±'] = 2090061929;
    arrayOfInt2['²'] = -1456614033;
    arrayOfInt2['³'] = -1290656305;
    arrayOfInt2['´'] = 999926984;
    arrayOfInt2['µ'] = -1484974064;
    arrayOfInt2['¶'] = 1852021992;
    arrayOfInt2['·'] = 2075868123;
    arrayOfInt2['¸'] = 158869197;
    arrayOfInt2['¹'] = -199730834;
    arrayOfInt2['º'] = 28809964;
    arrayOfInt2['»'] = -1466282109;
    arrayOfInt2['¼'] = 1701746150;
    arrayOfInt2['½'] = 2129067946;
    arrayOfInt2['¾'] = 147831841;
    arrayOfInt2['¿'] = -420997649;
    arrayOfInt2['À'] = -644094022;
    arrayOfInt2['Á'] = -835293366;
    arrayOfInt2['Â'] = -737566742;
    arrayOfInt2['Ã'] = -696471511;
    arrayOfInt2['Ä'] = -1347247055;
    arrayOfInt2['Å'] = 824393514;
    arrayOfInt2['Æ'] = 815048134;
    arrayOfInt2['Ç'] = -1067015627;
    arrayOfInt2['È'] = 935087732;
    arrayOfInt2['É'] = -1496677636;
    arrayOfInt2['Ê'] = -1328508704;
    arrayOfInt2['Ë'] = 366520115;
    arrayOfInt2['Ì'] = 1251476721;
    arrayOfInt2['Í'] = -136647615;
    arrayOfInt2['Î'] = 240176511;
    arrayOfInt2['Ï'] = 804688151;
    arrayOfInt2['Ð'] = -1915335306;
    arrayOfInt2['Ñ'] = 1303441219;
    arrayOfInt2['Ò'] = 1414376140;
    arrayOfInt2['Ó'] = -553347356;
    arrayOfInt2['Ô'] = -474623586;
    arrayOfInt2['Õ'] = 461924940;
    arrayOfInt2['Ö'] = -1205916479;
    arrayOfInt2['×'] = 2136040774;
    arrayOfInt2['Ø'] = 82468509;
    arrayOfInt2['Ù'] = 1563790337;
    arrayOfInt2['Ú'] = 1937016826;
    arrayOfInt2['Û'] = 776014843;
    arrayOfInt2['Ü'] = 1511876531;
    arrayOfInt2['Ý'] = 1389550482;
    arrayOfInt2['Þ'] = 861278441;
    arrayOfInt2['ß'] = 323475053;
    arrayOfInt2['à'] = -1939744870;
    arrayOfInt2['á'] = 2047648055;
    arrayOfInt2['â'] = -1911228327;
    arrayOfInt2['ã'] = -1992551445;
    arrayOfInt2['ä'] = -299390514;
    arrayOfInt2['å'] = 902390199;
    arrayOfInt2['æ'] = -303751967;
    arrayOfInt2['ç'] = 1018251130;
    arrayOfInt2['è'] = 1507840668;
    arrayOfInt2['é'] = 1064563285;
    arrayOfInt2['ê'] = 2043548696;
    arrayOfInt2['ë'] = -1086863501;
    arrayOfInt2['ì'] = -355600557;
    arrayOfInt2['í'] = 1537932639;
    arrayOfInt2['î'] = 342834655;
    arrayOfInt2['ï'] = -2032450440;
    arrayOfInt2['ð'] = -2114736182;
    arrayOfInt2['ñ'] = 1053059257;
    arrayOfInt2['ò'] = 741614648;
    arrayOfInt2['ó'] = 1598071746;
    arrayOfInt2['ô'] = 1925389590;
    arrayOfInt2['õ'] = 203809468;
    arrayOfInt2['ö'] = -1958134744;
    arrayOfInt2['÷'] = 1100287487;
    arrayOfInt2['ø'] = 1895934009;
    arrayOfInt2['ù'] = -558691320;
    arrayOfInt2['ú'] = -1662733096;
    arrayOfInt2['û'] = -1866377628;
    arrayOfInt2['ü'] = 1636092795;
    arrayOfInt2['ý'] = 1890988757;
    arrayOfInt2['þ'] = 1952214088;
    arrayOfInt2['ÿ'] = 1113045200;
  }

  private int FFmulX(int paramInt)
  {
    return (0x7F7F7F7F & paramInt) << 1 ^ 27 * ((0x80808080 & paramInt) >>> 7);
  }

  private void decryptBlock(int[][] paramArrayOfInt)
  {
    this.C0 ^= paramArrayOfInt[this.ROUNDS][0];
    this.C1 ^= paramArrayOfInt[this.ROUNDS][1];
    this.C2 ^= paramArrayOfInt[this.ROUNDS][2];
    this.C3 ^= paramArrayOfInt[this.ROUNDS][3];
    int i = -1 + this.ROUNDS;
    while (true)
    {
      if (i <= 1)
      {
        int i4 = Tinv0[(0xFF & this.C0)] ^ shift(Tinv0[(0xFF & this.C3 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C2 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C1 >> 24)], 8) ^ paramArrayOfInt[i][0];
        int i5 = Tinv0[(0xFF & this.C1)] ^ shift(Tinv0[(0xFF & this.C0 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C3 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C2 >> 24)], 8) ^ paramArrayOfInt[i][1];
        int i6 = Tinv0[(0xFF & this.C2)] ^ shift(Tinv0[(0xFF & this.C1 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C0 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C3 >> 24)], 8) ^ paramArrayOfInt[i][2];
        int i7 = Tinv0[(0xFF & this.C3)] ^ shift(Tinv0[(0xFF & this.C2 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C1 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C0 >> 24)], 8) ^ paramArrayOfInt[i][3];
        this.C0 = (0xFF & Si[(i4 & 0xFF)] ^ (0xFF & Si[(0xFF & i7 >> 8)]) << 8 ^ (0xFF & Si[(0xFF & i6 >> 16)]) << 16 ^ Si[(0xFF & i5 >> 24)] << 24 ^ paramArrayOfInt[0][0]);
        this.C1 = (0xFF & Si[(i5 & 0xFF)] ^ (0xFF & Si[(0xFF & i4 >> 8)]) << 8 ^ (0xFF & Si[(0xFF & i7 >> 16)]) << 16 ^ Si[(0xFF & i6 >> 24)] << 24 ^ paramArrayOfInt[0][1]);
        this.C2 = (0xFF & Si[(i6 & 0xFF)] ^ (0xFF & Si[(0xFF & i5 >> 8)]) << 8 ^ (0xFF & Si[(0xFF & i4 >> 16)]) << 16 ^ Si[(0xFF & i7 >> 24)] << 24 ^ paramArrayOfInt[0][2]);
        this.C3 = (0xFF & Si[(i7 & 0xFF)] ^ (0xFF & Si[(0xFF & i6 >> 8)]) << 8 ^ (0xFF & Si[(0xFF & i5 >> 16)]) << 16 ^ Si[(0xFF & i4 >> 24)] << 24 ^ paramArrayOfInt[0][3]);
        return;
      }
      int j = Tinv0[(0xFF & this.C0)] ^ shift(Tinv0[(0xFF & this.C3 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C2 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C1 >> 24)], 8) ^ paramArrayOfInt[i][0];
      int k = Tinv0[(0xFF & this.C1)] ^ shift(Tinv0[(0xFF & this.C0 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C3 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C2 >> 24)], 8) ^ paramArrayOfInt[i][1];
      int m = Tinv0[(0xFF & this.C2)] ^ shift(Tinv0[(0xFF & this.C1 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C0 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C3 >> 24)], 8) ^ paramArrayOfInt[i][2];
      int n = Tinv0[(0xFF & this.C3)] ^ shift(Tinv0[(0xFF & this.C2 >> 8)], 24) ^ shift(Tinv0[(0xFF & this.C1 >> 16)], 16) ^ shift(Tinv0[(0xFF & this.C0 >> 24)], 8);
      int i1 = i - 1;
      int i2 = n ^ paramArrayOfInt[i][3];
      this.C0 = (Tinv0[(j & 0xFF)] ^ shift(Tinv0[(0xFF & i2 >> 8)], 24) ^ shift(Tinv0[(0xFF & m >> 16)], 16) ^ shift(Tinv0[(0xFF & k >> 24)], 8) ^ paramArrayOfInt[i1][0]);
      this.C1 = (Tinv0[(k & 0xFF)] ^ shift(Tinv0[(0xFF & j >> 8)], 24) ^ shift(Tinv0[(0xFF & i2 >> 16)], 16) ^ shift(Tinv0[(0xFF & m >> 24)], 8) ^ paramArrayOfInt[i1][1]);
      this.C2 = (Tinv0[(m & 0xFF)] ^ shift(Tinv0[(0xFF & k >> 8)], 24) ^ shift(Tinv0[(0xFF & j >> 16)], 16) ^ shift(Tinv0[(0xFF & i2 >> 24)], 8) ^ paramArrayOfInt[i1][2]);
      int i3 = Tinv0[(i2 & 0xFF)] ^ shift(Tinv0[(0xFF & m >> 8)], 24) ^ shift(Tinv0[(0xFF & k >> 16)], 16) ^ shift(Tinv0[(0xFF & j >> 24)], 8);
      i = i1 - 1;
      this.C3 = (i3 ^ paramArrayOfInt[i1][3]);
    }
  }

  private void encryptBlock(int[][] paramArrayOfInt)
  {
    this.C0 ^= paramArrayOfInt[0][0];
    this.C1 ^= paramArrayOfInt[0][1];
    this.C2 ^= paramArrayOfInt[0][2];
    this.C3 ^= paramArrayOfInt[0][3];
    int i = 1;
    while (true)
    {
      if (i >= -1 + this.ROUNDS)
      {
        int i4 = T0[(0xFF & this.C0)] ^ shift(T0[(0xFF & this.C1 >> 8)], 24) ^ shift(T0[(0xFF & this.C2 >> 16)], 16) ^ shift(T0[(0xFF & this.C3 >> 24)], 8) ^ paramArrayOfInt[i][0];
        int i5 = T0[(0xFF & this.C1)] ^ shift(T0[(0xFF & this.C2 >> 8)], 24) ^ shift(T0[(0xFF & this.C3 >> 16)], 16) ^ shift(T0[(0xFF & this.C0 >> 24)], 8) ^ paramArrayOfInt[i][1];
        int i6 = T0[(0xFF & this.C2)] ^ shift(T0[(0xFF & this.C3 >> 8)], 24) ^ shift(T0[(0xFF & this.C0 >> 16)], 16) ^ shift(T0[(0xFF & this.C1 >> 24)], 8) ^ paramArrayOfInt[i][2];
        int i7 = T0[(0xFF & this.C3)] ^ shift(T0[(0xFF & this.C0 >> 8)], 24) ^ shift(T0[(0xFF & this.C1 >> 16)], 16) ^ shift(T0[(0xFF & this.C2 >> 24)], 8);
        int i8 = i + 1;
        int i9 = i7 ^ paramArrayOfInt[i][3];
        this.C0 = (0xFF & S[(i4 & 0xFF)] ^ (0xFF & S[(0xFF & i5 >> 8)]) << 8 ^ (0xFF & S[(0xFF & i6 >> 16)]) << 16 ^ S[(0xFF & i9 >> 24)] << 24 ^ paramArrayOfInt[i8][0]);
        this.C1 = (0xFF & S[(i5 & 0xFF)] ^ (0xFF & S[(0xFF & i6 >> 8)]) << 8 ^ (0xFF & S[(0xFF & i9 >> 16)]) << 16 ^ S[(0xFF & i4 >> 24)] << 24 ^ paramArrayOfInt[i8][1]);
        this.C2 = (0xFF & S[(i6 & 0xFF)] ^ (0xFF & S[(0xFF & i9 >> 8)]) << 8 ^ (0xFF & S[(0xFF & i4 >> 16)]) << 16 ^ S[(0xFF & i5 >> 24)] << 24 ^ paramArrayOfInt[i8][2]);
        this.C3 = (0xFF & S[(i9 & 0xFF)] ^ (0xFF & S[(0xFF & i4 >> 8)]) << 8 ^ (0xFF & S[(0xFF & i5 >> 16)]) << 16 ^ S[(0xFF & i6 >> 24)] << 24 ^ paramArrayOfInt[i8][3]);
        return;
      }
      int j = T0[(0xFF & this.C0)] ^ shift(T0[(0xFF & this.C1 >> 8)], 24) ^ shift(T0[(0xFF & this.C2 >> 16)], 16) ^ shift(T0[(0xFF & this.C3 >> 24)], 8) ^ paramArrayOfInt[i][0];
      int k = T0[(0xFF & this.C1)] ^ shift(T0[(0xFF & this.C2 >> 8)], 24) ^ shift(T0[(0xFF & this.C3 >> 16)], 16) ^ shift(T0[(0xFF & this.C0 >> 24)], 8) ^ paramArrayOfInt[i][1];
      int m = T0[(0xFF & this.C2)] ^ shift(T0[(0xFF & this.C3 >> 8)], 24) ^ shift(T0[(0xFF & this.C0 >> 16)], 16) ^ shift(T0[(0xFF & this.C1 >> 24)], 8) ^ paramArrayOfInt[i][2];
      int n = T0[(0xFF & this.C3)] ^ shift(T0[(0xFF & this.C0 >> 8)], 24) ^ shift(T0[(0xFF & this.C1 >> 16)], 16) ^ shift(T0[(0xFF & this.C2 >> 24)], 8);
      int i1 = i + 1;
      int i2 = n ^ paramArrayOfInt[i][3];
      this.C0 = (T0[(j & 0xFF)] ^ shift(T0[(0xFF & k >> 8)], 24) ^ shift(T0[(0xFF & m >> 16)], 16) ^ shift(T0[(0xFF & i2 >> 24)], 8) ^ paramArrayOfInt[i1][0]);
      this.C1 = (T0[(k & 0xFF)] ^ shift(T0[(0xFF & m >> 8)], 24) ^ shift(T0[(0xFF & i2 >> 16)], 16) ^ shift(T0[(0xFF & j >> 24)], 8) ^ paramArrayOfInt[i1][1]);
      this.C2 = (T0[(m & 0xFF)] ^ shift(T0[(0xFF & i2 >> 8)], 24) ^ shift(T0[(0xFF & j >> 16)], 16) ^ shift(T0[(0xFF & k >> 24)], 8) ^ paramArrayOfInt[i1][2]);
      int i3 = T0[(i2 & 0xFF)] ^ shift(T0[(0xFF & j >> 8)], 24) ^ shift(T0[(0xFF & k >> 16)], 16) ^ shift(T0[(0xFF & m >> 24)], 8);
      i = i1 + 1;
      this.C3 = (i3 ^ paramArrayOfInt[i1][3]);
    }
  }

  private int[][] generateWorkingKey(byte[] paramArrayOfByte, boolean paramBoolean)
  {
    int i = paramArrayOfByte.length / 4;
    if (((i != 4) && (i != 6) && (i != 8)) || (i * 4 != paramArrayOfByte.length))
      throw new IllegalArgumentException("Key length not 128/192/256 bits.");
    this.ROUNDS = (i + 6);
    int[] arrayOfInt = { 1 + this.ROUNDS, 4 };
    int[][] arrayOfInt1 = (int[][])Array.newInstance(Integer.TYPE, arrayOfInt);
    int j = 0;
    int k = 0;
    int n;
    int i2;
    while (true)
    {
      if (k >= paramArrayOfByte.length)
      {
        int m = 1 + this.ROUNDS << 2;
        n = i;
        if (n < m)
          break;
        if (!paramBoolean)
        {
          i2 = 1;
          if (i2 < this.ROUNDS)
            break label311;
        }
        return arrayOfInt1;
      }
      arrayOfInt1[(j >> 2)][(j & 0x3)] = (0xFF & paramArrayOfByte[k] | (0xFF & paramArrayOfByte[(k + 1)]) << 8 | (0xFF & paramArrayOfByte[(k + 2)]) << 16 | paramArrayOfByte[(k + 3)] << 24);
      k += 4;
      j++;
    }
    int i1 = arrayOfInt1[(n - 1 >> 2)][(0x3 & n - 1)];
    if (n % i == 0);
    for (i1 = subWord(shift(i1, 8)) ^ rcon[(-1 + n / i)]; ; i1 = subWord(i1))
      do
      {
        arrayOfInt1[(n >> 2)][(n & 0x3)] = (i1 ^ arrayOfInt1[(n - i >> 2)][(0x3 & n - i)]);
        n++;
        break;
      }
      while ((i <= 6) || (n % i != 4));
    label311: for (int i3 = 0; ; i3++)
    {
      if (i3 >= 4)
      {
        i2++;
        break;
      }
      arrayOfInt1[i2][i3] = inv_mcol(arrayOfInt1[i2][i3]);
    }
  }

  private int inv_mcol(int paramInt)
  {
    int i = FFmulX(paramInt);
    int j = FFmulX(i);
    int k = FFmulX(j);
    int m = paramInt ^ k;
    return k ^ (i ^ j) ^ shift(i ^ m, 8) ^ shift(j ^ m, 16) ^ shift(m, 24);
  }

  private void packBlock(byte[] paramArrayOfByte, int paramInt)
  {
    int i = paramInt + 1;
    paramArrayOfByte[paramInt] = ((byte)this.C0);
    int j = i + 1;
    paramArrayOfByte[i] = ((byte)(this.C0 >> 8));
    int k = j + 1;
    paramArrayOfByte[j] = ((byte)(this.C0 >> 16));
    int m = k + 1;
    paramArrayOfByte[k] = ((byte)(this.C0 >> 24));
    int n = m + 1;
    paramArrayOfByte[m] = ((byte)this.C1);
    int i1 = n + 1;
    paramArrayOfByte[n] = ((byte)(this.C1 >> 8));
    int i2 = i1 + 1;
    paramArrayOfByte[i1] = ((byte)(this.C1 >> 16));
    int i3 = i2 + 1;
    paramArrayOfByte[i2] = ((byte)(this.C1 >> 24));
    int i4 = i3 + 1;
    paramArrayOfByte[i3] = ((byte)this.C2);
    int i5 = i4 + 1;
    paramArrayOfByte[i4] = ((byte)(this.C2 >> 8));
    int i6 = i5 + 1;
    paramArrayOfByte[i5] = ((byte)(this.C2 >> 16));
    int i7 = i6 + 1;
    paramArrayOfByte[i6] = ((byte)(this.C2 >> 24));
    int i8 = i7 + 1;
    paramArrayOfByte[i7] = ((byte)this.C3);
    int i9 = i8 + 1;
    paramArrayOfByte[i8] = ((byte)(this.C3 >> 8));
    int i10 = i9 + 1;
    paramArrayOfByte[i9] = ((byte)(this.C3 >> 16));
    (i10 + 1);
    paramArrayOfByte[i10] = ((byte)(this.C3 >> 24));
  }

  private int shift(int paramInt1, int paramInt2)
  {
    return paramInt1 >>> paramInt2 | paramInt1 << -paramInt2;
  }

  private int subWord(int paramInt)
  {
    return 0xFF & S[(paramInt & 0xFF)] | (0xFF & S[(0xFF & paramInt >> 8)]) << 8 | (0xFF & S[(0xFF & paramInt >> 16)]) << 16 | S[(0xFF & paramInt >> 24)] << 24;
  }

  private void unpackBlock(byte[] paramArrayOfByte, int paramInt)
  {
    int i = paramInt + 1;
    this.C0 = (0xFF & paramArrayOfByte[paramInt]);
    int j = this.C0;
    int k = i + 1;
    this.C0 = (j | (0xFF & paramArrayOfByte[i]) << 8);
    int m = this.C0;
    int n = k + 1;
    this.C0 = (m | (0xFF & paramArrayOfByte[k]) << 16);
    int i1 = this.C0;
    int i2 = n + 1;
    this.C0 = (i1 | paramArrayOfByte[n] << 24);
    int i3 = i2 + 1;
    this.C1 = (0xFF & paramArrayOfByte[i2]);
    int i4 = this.C1;
    int i5 = i3 + 1;
    this.C1 = (i4 | (0xFF & paramArrayOfByte[i3]) << 8);
    int i6 = this.C1;
    int i7 = i5 + 1;
    this.C1 = (i6 | (0xFF & paramArrayOfByte[i5]) << 16);
    int i8 = this.C1;
    int i9 = i7 + 1;
    this.C1 = (i8 | paramArrayOfByte[i7] << 24);
    int i10 = i9 + 1;
    this.C2 = (0xFF & paramArrayOfByte[i9]);
    int i11 = this.C2;
    int i12 = i10 + 1;
    this.C2 = (i11 | (0xFF & paramArrayOfByte[i10]) << 8);
    int i13 = this.C2;
    int i14 = i12 + 1;
    this.C2 = (i13 | (0xFF & paramArrayOfByte[i12]) << 16);
    int i15 = this.C2;
    int i16 = i14 + 1;
    this.C2 = (i15 | paramArrayOfByte[i14] << 24);
    int i17 = i16 + 1;
    this.C3 = (0xFF & paramArrayOfByte[i16]);
    int i18 = this.C3;
    int i19 = i17 + 1;
    this.C3 = (i18 | (0xFF & paramArrayOfByte[i17]) << 8);
    int i20 = this.C3;
    int i21 = i19 + 1;
    this.C3 = (i20 | (0xFF & paramArrayOfByte[i19]) << 16);
    int i22 = this.C3;
    (i21 + 1);
    this.C3 = (i22 | paramArrayOfByte[i21] << 24);
  }

  public String getAlgorithmName()
  {
    return "AES";
  }

  public int getBlockSize()
  {
    return 16;
  }

  public void init(boolean paramBoolean, CipherParameters paramCipherParameters)
  {
    if ((paramCipherParameters instanceof KeyParameter))
    {
      this.WorkingKey = generateWorkingKey(((KeyParameter)paramCipherParameters).getKey(), paramBoolean);
      this.forEncryption = paramBoolean;
      return;
    }
    throw new IllegalArgumentException("invalid parameter passed to AES init - " + paramCipherParameters.getClass().getName());
  }

  public int processBlock(byte[] paramArrayOfByte1, int paramInt1, byte[] paramArrayOfByte2, int paramInt2)
  {
    if (this.WorkingKey == null)
      throw new IllegalStateException("AES engine not initialised");
    if (paramInt1 + 16 > paramArrayOfByte1.length)
      throw new DataLengthException("input buffer too short");
    if (paramInt2 + 16 > paramArrayOfByte2.length)
      throw new DataLengthException("output buffer too short");
    if (this.forEncryption)
    {
      unpackBlock(paramArrayOfByte1, paramInt1);
      encryptBlock(this.WorkingKey);
      packBlock(paramArrayOfByte2, paramInt2);
    }
    while (true)
    {
      return 16;
      unpackBlock(paramArrayOfByte1, paramInt1);
      decryptBlock(this.WorkingKey);
      packBlock(paramArrayOfByte2, paramInt2);
    }
  }

  public void reset()
  {
  }
}